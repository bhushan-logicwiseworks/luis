import{a as f,b as P,c as m,k as l,q as e}from"./chunk-4RIDPFY2.js";import{a as n,b as L,c as s}from"./chunk-W6W3L4PS.js";import{n as u}from"./chunk-7TJE7DO7.js";import{a as w}from"./chunk-UUGBUDN2.js";import{J as r,ha as c,p as a,qa as S,v as o,wa as d}from"./chunk-3Q5CJMKA.js";var E=(()=>{class p{constructor(h,D,$){this.actions$=h,this.store=D,this.apiService=$,this.loadPatients$=n(()=>this.actions$.pipe(s(e.LoadPatientDetails),c(i=>this.apiService.getPatientDetails(i.id).pipe(o(t=>e.LoadPatientDetailsSuccess({patient:t})),r(t=>a(e.LoadPatientDetailsFailure({error:t.error}))))))),this.loadPatientSalesRep$=n(()=>this.actions$.pipe(s(e.LoadPatientSalesRep),c(i=>this.apiService.getPatientSalesRep().pipe(o(t=>e.LoadPatientSalesRepSuccess({salesrep:t})),r(t=>a(e.LoadPatientSalesRepFailure({error:t.error}))))))),this.loadIntakeDropDown$=n(()=>this.actions$.pipe(s(e.LoadIntakeDropDown),c(i=>this.apiService.getPatientIntake().pipe(o(t=>e.LoadIntakeDropDownSuccess({intake:t})),r(t=>a(e.LoadIntakeDropDownFailure({error:t.error}))))))),this.LoadPatientCategoryDropDown$=n(()=>this.actions$.pipe(s(e.LoadPatientCategoryDropDown),c(i=>this.apiService.getPatientCatagory().pipe(o(t=>e.LoadPatientCategoryDropDownSuccess({patientCategory:t})),r(t=>a(e.LoadPatientCategoryDropDownFailure({error:t.error}))))))),this.LoadPatientContactMethodDropDown$=n(()=>this.actions$.pipe(s(e.LoadPatientContactMethodDropDown),c(i=>this.apiService.getPatientContactMethod().pipe(o(t=>e.LoadPatientContactMethodDropDownSuccess({contactMethod:t})),r(t=>a(e.LoadPatientContactMethodDropDownFailure({error:t.error}))))))),this.LoadPatientStatusDropDown$=n(()=>this.actions$.pipe(s(e.LoadPatientStatusDropDown),c(i=>this.apiService.getPatientStatus().pipe(o(t=>e.LoadPatientStatusDropDownSuccess({patientStatus:t})),r(t=>a(e.LoadPatientStatusDropDownFailure({error:t.error}))))))),this.LoadPatientReferralDropDown$=n(()=>this.actions$.pipe(s(e.LoadPatientReferralDropDown),c(i=>this.apiService.getPatientReferral().pipe(o(t=>e.LoadPatientReferralDropDownSuccess({patientReferral:t})),r(t=>a(e.LoadPatientReferralDropDownFailure({error:t.error}))))))),this.LoadInactiveReasonDropDown$=n(()=>this.actions$.pipe(s(e.LoadInactiveReasonDropDown),c(i=>this.apiService.getInactiveReason().pipe(o(t=>e.LoadInactiveReasonDropDownSuccess({inactiveReason:t})),r(t=>a(e.LoadInactiveReasonDropDownFailure({error:t.error}))))))),this.LoadCityAndStateDropDown$=n(()=>this.actions$.pipe(s(e.LoadCityAndStateDropDown),c(i=>this.apiService.getStateCityBasedOnZipCode(i.zipCode).pipe(o(t=>e.LoadCityAndStateDropDownSuccess({zipCodeLookup:t})),r(t=>a(e.LoadCityAndStateDropDownFailure({error:t.error}))))))),this.LoadPlaceOfServiceDropDown$=n(()=>this.actions$.pipe(s(e.LoadPlaceOfServiceDropDown),c(i=>this.apiService.getPlaceOfService().pipe(o(t=>e.LoadPlaceOfServiceDropDownSuccess({placeOfService:t})),r(t=>a(e.LoadPlaceOfServiceDropDownFailure({error:t.error}))))))),this.loadReferrals$=n(()=>this.actions$.pipe(s(e.LoadPatientReferrals),c(i=>this.apiService.getPatientReferal().pipe(o(t=>e.LoadPatientReferralsSuccess({referrals:t})),r(t=>a(e.LoadPatientReferralsFailure({error:t.error}))))))),this.loadPatientValidation$=n(()=>this.actions$.pipe(s(e.LoadPatientValidation),c(i=>this.apiService.getPatientValidations(i.id).pipe(o(t=>e.LoadPatientValidationSuccess({patientValidation:t})),r(t=>a(e.LoadPatientValidationFailure({error:t.error}))))))),this.loadValidationByUpdateRecord$=n(()=>this.actions$.pipe(s(l.UpdatePatientPayorsSuccess,P.UpdatePatientPhysiciansSuccess,f.AddPatientDiagnosiscodeSuccess,m.EditGroupWorkEditSuccess,P.AddPatientPhysiciansSuccess,l.AddPatientPayorsSuccess),o(i=>{if(window.location.href.split("/")[4]!=="work-order-center"){let v=parseInt(window.location.href.split("/")[5],10);return e.LoadPatientValidation({id:v})}return{type:"[No Action] No Action Required"}}),r(i=>a(e.LoadPatientValidationFailure({error:i.error})))))}static{this.\u0275fac=function(D){return new(D||p)(d(L),d(u),d(w))}}static{this.\u0275prov=S({token:p,factory:p.\u0275fac,providedIn:"root"})}}return p})();export{E as a};
