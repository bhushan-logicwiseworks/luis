import{c as _}from"./chunk-OJSM7WWP.js";import{F as h,k as M}from"./chunk-4RIDPFY2.js";import{c as N}from"./chunk-SIF5SKDU.js";import{a as b}from"./chunk-3IAIBVAD.js";import{n as w}from"./chunk-7TJE7DO7.js";import{m as F}from"./chunk-4JDFQORI.js";import{a as I,b as m}from"./chunk-ETZ3F2L4.js";import{d as S}from"./chunk-W5GYUEPJ.js";import{Ab as g,Dc as y,Ic as l,Jc as d,Ob as r,Sc as v,Zb as s,_b as u,fc as C,hd as P,md as D,pb as n,tb as o}from"./chunk-3Q5CJMKA.js";import{b as f}from"./chunk-WFMAM73Y.js";var O=x=>({"min-h-80":x}),L=class c{constructor(e,i,t,p,a){this.store=e,this.route=i,this.searchService=t,this._matDialog=p,this.cdr=a,this.rowData=[],this.columnDefs=[{headerName:"Payor ID",minWidth:85,field:"id",filter:"agMultiColumnFilter",sortIndex:1,hide:!1},{headerName:"Bill-To Code",minWidth:125,field:"billto",filter:"agMultiColumnFilter",sortIndex:2,hide:!1},{headerName:"Branch",minWidth:100,field:"branchName",filter:"agMultiColumnFilter",sortIndex:3,hide:!1},{headerName:"Name",minWidth:350,field:"name",filter:"agMultiColumnFilter",sortIndex:4,hide:!1},{headerName:"Address",minWidth:200,field:"address",filter:"agMultiColumnFilter",sortIndex:5,hide:!1},{headerName:"City",minWidth:120,field:"city",filter:"agMultiColumnFilter",sortIndex:6,hide:!1},{headerName:"State",minWidth:100,field:"state",filter:"agMultiColumnFilter",sortIndex:7,hide:!1},{headerName:"NPI",minWidth:100,field:"npi",filter:"agMultiColumnFilter",sortIndex:7,hide:!1}],this.options={defaultColDef:{flex:1,filter:!0,sortable:!0}},this.paginationOptions={pageSize:20,pageSizeOptions:[5,10,20,50]},this.displayedColumns=["id","billto","branchName","name","city","state","npi"],this.searchCtrl=new F,this.data$=this.store.select(h.selectPayorsList),this.loading$=this.store.select(h.selectLoading)}ngOnInit(){Promise.resolve().then(()=>{this.data$.pipe(m(this)).subscribe(e=>{this.rowData=e}),this.store.dispatch(M.LoadPatientPayorsList()),this.searchCtrl.valueChanges.pipe(m(this)).subscribe(e=>{this.searchService.search.next(e),this.cdr.detectChanges()}),this.getPatientId=Number(this.route.url.split("/")[3])})}close(){this._matDialog.close()}selectRow(e){this._matDialog.close(e),this.clearFilter()}onSelectionChanged(e){this.selectRow(e.api.getSelectedRows()[0])}clearFilter(){this.searchService.resetFilter.next({resetGrid:!0})}static{this.\u0275fac=function(i){return new(i||c)(o(w),o(S),o(b),o(N),o(v))}}static{this.\u0275cmp=g({type:c,selectors:[["app-patient-payors-list"]],decls:5,vars:14,consts:[[1,"relative","rounded","bg-white","shadow"],[1,"relative","bg-white",3,"ngClass"],[3,"rowSelectionChange","gridOptions","paginatorOption","component","rowData","columnDefs","visibleColumns","loading"]],template:function(i,t){i&1&&(s(0,"div",0)(1,"div",1),l(2,"async"),s(3,"aux-ag-grid",2),l(4,"async"),C("rowSelectionChange",function(a){return t.onSelectionChanged(a)}),u()()()),i&2&&(n(),r("ngClass",y(12,O,d(2,8,t.loading$))),n(2),r("gridOptions",t.options)("paginatorOption",t.paginationOptions)("component","patientPayorList")("rowData",t.rowData)("columnDefs",t.columnDefs)("visibleColumns",t.displayedColumns)("loading",d(4,10,t.loading$)))},dependencies:[P,_,D],encapsulation:2,changeDetection:0})}};L=f([I()],L);export{L as a};
