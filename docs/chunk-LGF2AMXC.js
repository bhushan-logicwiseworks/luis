import{a as Q,b as d,c as nt,d as ot,e as c,f as rt,g as L,h as lt,i as st,j as dt,k as mt,l as ct,m as pt,n as ut,o as ht,p as ft,q as Ct}from"./chunk-PPBQGNMY.js";import"./chunk-XPFFTSXC.js";import"./chunk-XNSTYRIR.js";import"./chunk-LQP35CM2.js";import"./chunk-JBP6HANX.js";import{a as u}from"./chunk-6LE6SZDP.js";import{a as at}from"./chunk-X74UJ3QR.js";import"./chunk-Y5RI4PHI.js";import{a as et,b as tt,c as it}from"./chunk-BLZL7MQY.js";import{a as m,c as W}from"./chunk-OJSM7WWP.js";import{t as f}from"./chunk-4RIDPFY2.js";import"./chunk-6YJMKPRN.js";import"./chunk-PRXHNPXO.js";import"./chunk-OD2F5SLA.js";import{a as s}from"./chunk-PVSGC5X6.js";import"./chunk-WX54DYK2.js";import"./chunk-XMHJJKH6.js";import{a as k}from"./chunk-YCMFPTNH.js";import"./chunk-6HRBECBJ.js";import"./chunk-E6UI7ODH.js";import{a as Ie}from"./chunk-V2BYYYUY.js";import"./chunk-ODTVUJKH.js";import{a as B}from"./chunk-Z76PEBTC.js";import"./chunk-GLNCR2H3.js";import{b as p}from"./chunk-M7CNBRZG.js";import"./chunk-T6JQBFCO.js";import{a as Xe}from"./chunk-VK4TGBYQ.js";import{e as F}from"./chunk-SIF5SKDU.js";import"./chunk-F5X5MWHG.js";import"./chunk-T3QSJAN3.js";import{a as N}from"./chunk-3IAIBVAD.js";import"./chunk-QZ2WTBPW.js";import"./chunk-KFQHPBEM.js";import{a as De}from"./chunk-7RWCIHFI.js";import"./chunk-HIKYOSQ5.js";import"./chunk-7LGNX6B7.js";import"./chunk-XU6AK5HV.js";import"./chunk-YP5VDLTG.js";import"./chunk-PCFNTMO3.js";import"./chunk-QG7HLPG5.js";import{a as ee,b as ne,c as te,e as Ze}from"./chunk-W6W3L4PS.js";import{n as x,q as Ge}from"./chunk-7TJE7DO7.js";import"./chunk-UU7RD3EP.js";import"./chunk-UCIJYWKW.js";import"./chunk-2SL7SW2K.js";import"./chunk-XX7H3YTW.js";import"./chunk-MYHJKLLN.js";import"./chunk-WTDAEWCX.js";import"./chunk-6WEMRU4N.js";import"./chunk-S6VYPJGT.js";import"./chunk-I3M6OUQD.js";import"./chunk-BV6IOHNV.js";import{D as qe,c as Ye,h as Ke,m as ze,q as Je}from"./chunk-4JDFQORI.js";import"./chunk-EPIW33CJ.js";import{o as Qe}from"./chunk-YUJOUWZJ.js";import"./chunk-S2ZXS5BT.js";import"./chunk-TWDZ6JFE.js";import"./chunk-M4WH542H.js";import{a as oe}from"./chunk-UUGBUDN2.js";import"./chunk-CF7SUKG7.js";import{a as A,b as r}from"./chunk-ETZ3F2L4.js";import"./chunk-3QHLU7SJ.js";import{J as Ve,p as He}from"./chunk-HJKZPT2B.js";import{b as O,c as ke,d as M,k as $e}from"./chunk-W5GYUEPJ.js";import{$b as ie,Ab as E,Bc as T,Ia as Me,Ic as P,J as Z,Ja as Be,Jc as w,Ob as v,Zb as D,_b as I,da as Oe,dc as We,f as b,fc as S,ga as R,ha as C,md as _,p as X,pb as g,qa as ae,rc as je,sc as Le,tb as n,td as Ue,v as J,wa as q}from"./chunk-3Q5CJMKA.js";import{b as y}from"./chunk-WFMAM73Y.js";import"./chunk-2AVGQ2MQ.js";var gt=(()=>{class Y{constructor(t,i,o){this.actions$=t,this.store=i,this.apiService=o,this.saveBillingEvent$=ee(()=>this.actions$.pipe(te(Q.SaveBillingEvent),C(l=>this.apiService.saveBillingEvent(l.data,l.filter).pipe(J(h=>(Ie.ADD_SUCCESS(),Q.SaveBillingEventSuccess({response:h}))),Z(h=>(Ie.ADD_FAILURE(),X(Q.SaveBillingEventFailure({error:h.error})))))))),this.loadOwners$=ee(()=>this.actions$.pipe(te(Q.LoadOwners),C(l=>this.apiService.getOwners().pipe(J(h=>Q.LoadOwnersSuccess({owners:h})),Z(h=>X(Q.LoadOwnersFailure({error:h.error})))))))}static{this.\u0275fac=function(i){return new(i||Y)(q(ne),q(x),q(oe))}}static{this.\u0275prov=ae({token:Y,factory:Y.\u0275fac,providedIn:"root"})}}return Y})();var vt=(()=>{class Y{constructor(t,i){this.actions$=t,this.apiService=i,this.loadBillingEvents$=ee(()=>this.actions$.pipe(te(d.LoadBillingEvents),C(o=>this.apiService.getBillingEvents(o.filter).pipe(J(l=>d.LoadBillingEventsSuccess({BillingEvents:l})),Z(l=>X(d.LoadBillingEventsFailure({error:l.error}))))))),this.loadAllEvents$=ee(()=>this.actions$.pipe(te(d.LoadAllBillingEvents),C(()=>this.apiService.getAllEvents().pipe(J(o=>d.LoadAllBillingEventsSuccess({BillingEvents:o})),Z(o=>X(d.LoadAllBillingEventsFailure({error:o.error})))))))}static{this.\u0275fac=function(i){return new(i||Y)(q(ne),q(oe))}}static{this.\u0275prov=ae({token:Y,factory:Y.\u0275fac,providedIn:"root"})}}return Y})();var Dt=[Ge(nt,ot),Ze([vt,gt])];var re=class ye{constructor(e,t,i,o,l,h,j){this.store=e,this.route=t,this.router=i,this.dateFormatePipe=o,this.searchService=l,this.auxUtilService=h,this.dialog=j,this.rowData=[],this.options={defaultColDef:{flex:1,filter:!0,sortable:!0}},this.columnDefs=[{headerName:"ID",field:"id",filter:"agMultiColumnFilter",minWidth:60},{headerName:"Patient ID",field:"patientId",filter:"agMultiColumnFilter",minWidth:100},{headerName:"Event Type",field:"eventType",filter:"agMultiColumnFilter",minWidth:150},{headerName:"Today's Date",field:"todaysDate",valueFormatter:a=>this.dateFormatePipe.transform(a.data?.todaysDate),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"Claim Date of Service",field:"claimDateOfService",valueFormatter:a=>this.dateFormatePipe.transform(a.data?.claimDateOfService),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"Owner",field:"owner",filter:"agMultiColumnFilter",minWidth:150},{headerName:"Primary Insurance ID",field:"primaryInsId",filter:"agMultiColumnFilter",minWidth:180},{headerName:"Action",field:"action",filter:"agMultiColumnFilter",minWidth:150},{headerName:"Refund Result",field:"isRefundResult",filter:"agMultiColumnFilter",minWidth:160,filterValueGetter:a=>a.data.isRefundResult?"True":"False",valueFormatter:a=>a.value?"YES":"NO",cellDataType:"text"},{headerName:"Reason Code",field:"reasonCode",filter:"agMultiColumnFilter",minWidth:160},{headerName:"Secondary/Tertiary Ins. ID",field:"secondaryTertiaryInsId",filter:"agMultiColumnFilter",minWidth:200},{headerName:"Insurance ID",field:"insuranceId",filter:"agMultiColumnFilter",minWidth:160},{headerName:"Primary or Secondary",field:"primaryOrSecondary",filter:"agMultiColumnFilter",minWidth:180},{headerName:"Additional Info",field:"additionalInfo",filter:"agMultiColumnFilter",minWidth:200},{headerName:"Amount",field:"amount",filter:"agMultiColumnFilter",minWidth:120},{headerName:"Amount Paid to Patient",field:"amountPaidToPatient",filter:"agMultiColumnFilter",minWidth:200},{headerName:"Follow Up Type",field:"followUpType",filter:"agMultiColumnFilter",minWidth:180},{headerName:"Date Payment Received",field:"datePaymentReceived",valueFormatter:a=>this.dateFormatePipe.transform(a.data?.datePaymentReceived),filter:"agDateColumnFilter",filterParams:m,minWidth:200},{headerName:"Return Action",field:"returnAction",filter:"agMultiColumnFilter",minWidth:200},{headerName:"Date Fully Resolved",field:"dateFullyResolved",valueFormatter:a=>this.dateFormatePipe.transform(a.data?.dateFullyResolved),filter:"agDateColumnFilter",filterParams:m,minWidth:200},{headerName:"Is Appeal For Refund",field:"isAppealForRefund",filter:"agMultiColumnFilter",filterValueGetter:a=>a.data.isAppealForRefund?"True":"False",valueFormatter:a=>a.value?"YES":"NO",cellDataType:"text",minWidth:180},{headerName:"Appeal Outcome",field:"appealOutcome",filter:"agMultiColumnFilter",minWidth:180},{headerName:"Outcome",field:"outcome",filter:"agMultiColumnFilter",minWidth:150},{headerName:"Program Type",field:"programType",filter:"agMultiColumnFilter",minWidth:180},{headerName:"Re-Evaluation Date",field:"reEvaluationDate",valueFormatter:a=>this.dateFormatePipe.transform(a.data?.reEvaluationDate),filter:"agDateColumnFilter",filterParams:m,minWidth:200},{headerName:"",field:"comments",filter:"agMultiColumnFilter",cellRenderer:u,cellRendererParams:{field:"contactNotes"},minWidth:75,onCellClicked:a=>this.openContactNote(a.data.id,a.data.patientId)}],this.visibleColumns=["id","patientId","eventType","todaysDate","claimDateOfService","owner","primaryInsId","action","isRefundResult","reasonCode","secondaryTertiaryInsId","insuranceId","primaryOrSecondary","additionalInfo","amount","amountPaidToPatient","followUpType","datePaymentReceived","returnAction","dateFullyResolved","isAppealForRefund","appealOutcome","outcome","programType","reEvaluationDate","comments"],this.data$=this.route.paramMap.pipe(C(a=>this.store.select(c.selectBillingEvents))),this.loading$=this.store.select(c.selectLoading),this.refresh=new b,this.refresh$=this.refresh.asObservable()}ngOnInit(){this.refresh$.pipe(R(null),r(this)).subscribe(()=>{this.store.dispatch(d.LoadAllBillingEvents())}),this.data$.pipe(r(this)).subscribe(e=>{this.rowData=e})}onSelectionChanged(e){["comments","patientId"].includes(e.column.getColId())}ngOnDestroy(){this.store.dispatch(d.resetState())}getIcon(e){return e=="ENGLISH"?"US":e=="SPANISH"?"ES":""}handleRedirect(e,t){this.auxUtilService.redirectToNewTab(e,t)}openContactNote(e,t){this.store.dispatch(f.LoadContactNotes({patientId:t,refId:e}));let i={icon:"mat_outline:chat",iconColor:"primary",title:"CONTACT NOTES",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:L,dynamicComponentData:{patientId:t,refId:e,moduleName:"BillingEvents"},submitFunction:"saveContactNote",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:i}).afterClosed().pipe(r(this)).subscribe(o=>{o?.success&&this.store.dispatch(f.LoadContactNotes({patientId:this.patientId,refId:e}))})}static{this.\u0275fac=function(t){return new(t||ye)(n(x),n(O),n(M),n(s),n(N),n(B),n(F))}}static{this.\u0275cmp=E({type:ye,selectors:[["app-all-billing-events"]],features:[T([s])],decls:4,vars:9,consts:[[1,"flex","flex-auto","flex-col","overflow-hidden"],[1,"relative","overflow-auto","bg-white","shadow"],[3,"cellClicked","gridOptions","columnDefs","rowData","component","visibleColumns","loading","agGridHeight"]],template:function(t,i){t&1&&(D(0,"div",0)(1,"div",1)(2,"aux-ag-grid",2),P(3,"async"),S("cellClicked",function(l){return i.onSelectionChanged(l)}),I()()()),t&2&&(g(2),v("gridOptions",i.options)("columnDefs",i.columnDefs)("rowData",i.rowData)("component","allbillingevents")("visibleColumns",i.visibleColumns)("loading",w(3,7,i.loading$))("agGridHeight","calc(100vh - 304px)"))},dependencies:[W,_],encapsulation:2,changeDetection:0})}};re=y([A()],re);var le=class Ee{constructor(e,t,i,o,l,h,j){this.store=e,this.route=t,this.router=i,this.dateFormatePipe=o,this.searchService=l,this.auxUtilService=h,this.dialog=j,this.rowData=[],this.options={defaultColDef:{flex:1,filter:!0,sortable:!0}},this.columnDefs=[{headerName:"ID",field:"id",filter:"agMultiColumnFilter",minWidth:60},{headerName:"Patient ID",field:"patientId",filter:"agMultiColumnFilter",minWidth:100,cellRenderer:u,cellRendererParams:{field:"patientId"},onCellClicked:a=>this.handleRedirect("appeals",{data:{patientid:a.data.patientId}})},{headerName:"TODAY'S DATE",field:"todaysDate",valueFormatter:a=>this.dateFormatePipe.transform(a.data.todaysDate),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"CLAIM DATE OF SERVICE",field:"claimDateOfService",valueFormatter:a=>this.dateFormatePipe.transform(a.data.claimDateOfService),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"OWNER",field:"owner",filter:"agMultiColumnFilter",minWidth:110},{headerName:"PRIMARY OR SECONDARY",field:"primaryOrSecondary",filter:"agMultiColumnFilter",minWidth:150},{headerName:"INSURANCE ID",field:"insuranceId",filter:"agMultiColumnFilter",minWidth:160},{headerName:"WHAT THESE AN APPEAL FOR A REFUND?",field:"isAppealForRefund",filter:"agMultiColumnFilter",filterValueGetter:a=>a.data.isAppealForRefund?"True":"False",valueFormatter:a=>a.value?"YES":"NO",cellDataType:"text",minWidth:220},{headerName:"APPEAL OUTCOME",field:"appealOutcome",filter:"agMultiColumnFilter",minWidth:180},{headerName:"",field:"comments",filter:"agMultiColumnFilter",cellRenderer:u,cellRendererParams:{field:"contactNotes"},minWidth:75,onCellClicked:a=>this.openContactNote(a.data.id,a.data.patientId)}],this.visibleColumns=["id","patientId","todaysDate","claimDateOfService","owner","primaryOrSecondary","insuranceId","isAppealForRefund","appealOutcome","comments"],this.data$=this.route.paramMap.pipe(C(a=>this.store.select(c.selectBillingEvents))),this.loading$=this.store.select(c.selectLoading),this.refresh=new b,this.refresh$=this.refresh.asObservable()}ngOnInit(){this.refresh$.pipe(R(null),r(this)).subscribe(()=>{this.store.dispatch(d.LoadBillingEvents({filter:"appeals"}))}),this.data$.pipe(r(this)).subscribe(e=>{this.rowData=e})}onSelectionChanged(e){["comments","patientId"].includes(e.column.getColId())||this.appealResponseAddEdit(e.data)}ngOnDestroy(){this.store.dispatch(d.resetState())}getIcon(e){return e=="ENGLISH"?"US":e=="SPANISH"?"ES":""}handleRedirect(e,t){this.auxUtilService.redirectToNewTab(e,t)}appealResponseAddEdit(e){let t={icon:"mat_outline:edit_note",title:e?"EDIT EVENT":"ADD EVENT",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:lt,dynamicComponentData:e?{billingevents:e}:null,submitFunction:"saveAppealResponse",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:t}).afterClosed().pipe(r(this)).subscribe(i=>{this.refresh.next(i)})}openCreate(){this.appealResponseAddEdit()}openContactNote(e,t){this.store.dispatch(f.LoadContactNotes({patientId:t,refId:e}));let i={icon:"mat_outline:chat",iconColor:"primary",title:"CONTACT NOTES",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:L,dynamicComponentData:{patientId:t,refId:e,moduleName:"BillingEvents"},submitFunction:"saveContactNote",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:i}).afterClosed().pipe(r(this)).subscribe(o=>{o?.success&&this.store.dispatch(f.LoadContactNotes({patientId:this.patientId,refId:e}))})}static{this.\u0275fac=function(t){return new(t||Ee)(n(x),n(O),n(M),n(s),n(N),n(B),n(F))}}static{this.\u0275cmp=E({type:Ee,selectors:[["app-appeal-response"]],features:[T([s])],decls:4,vars:9,consts:[[1,"flex","flex-auto","flex-col","overflow-hidden"],[1,"relative","overflow-auto","bg-white","shadow"],[3,"cellClicked","gridOptions","columnDefs","rowData","component","visibleColumns","loading","agGridHeight"]],template:function(t,i){t&1&&(D(0,"div",0)(1,"div",1)(2,"aux-ag-grid",2),P(3,"async"),S("cellClicked",function(l){return i.onSelectionChanged(l)}),I()()()),t&2&&(g(2),v("gridOptions",i.options)("columnDefs",i.columnDefs)("rowData",i.rowData)("component","appealResponse")("visibleColumns",i.visibleColumns)("loading",w(3,7,i.loading$))("agGridHeight","calc(100vh - 304px)"))},dependencies:[W,_],encapsulation:2,changeDetection:0})}};le=y([A()],le);var se=class Se{constructor(e,t,i,o,l,h,j){this.store=e,this.route=t,this.router=i,this.dateFormatePipe=o,this.searchService=l,this.auxUtilService=h,this.dialog=j,this.rowData=[],this.options={defaultColDef:{flex:1,filter:!0,sortable:!0}},this.columnDefs=[{headerName:"ID",field:"id",filter:"agMultiColumnFilter",minWidth:60},{headerName:"Patient ID",field:"patientId",filter:"agMultiColumnFilter",minWidth:100,cellRenderer:u,cellRendererParams:{field:"patientId"},onCellClicked:a=>this.handleRedirect("claimcalls",{data:{patientid:a.data.patientId}})},{headerName:"TODAY'S DATE",field:"todaysDate",valueFormatter:a=>this.dateFormatePipe.transform(a.data.todaysDate),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"CLAIM DATE OF SERVICE",field:"claimDateOfService",valueFormatter:a=>this.dateFormatePipe.transform(a.data.claimDateOfService),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"OWNER",field:"owner",filter:"agMultiColumnFilter",minWidth:150},{headerName:"INSURANCE ID",field:"insuranceId",filter:"agMultiColumnFilter",minWidth:160},{headerName:"",field:"comments",filter:"agMultiColumnFilter",cellRenderer:u,cellRendererParams:{field:"contactNotes"},minWidth:75,onCellClicked:a=>this.openContactNote(a.data.id,a.data.patientId)}],this.visibleColumns=["id","patientId","todaysDate","claimDateOfService","owner","insuranceId","comments"],this.data$=this.route.paramMap.pipe(C(a=>this.store.select(c.selectBillingEvents))),this.loading$=this.store.select(c.selectLoading),this.refresh=new b,this.refresh$=this.refresh.asObservable()}ngOnInit(){this.refresh$.pipe(R(null),r(this)).subscribe(()=>{this.store.dispatch(d.LoadBillingEvents({filter:"claimcalls"}))}),this.data$.pipe(r(this)).subscribe(e=>{this.rowData=e})}onSelectionChanged(e){["comments","patientId"].includes(e.column.getColId())||this.claimCallsAddEdit(e.data)}ngOnDestroy(){this.store.dispatch(d.resetState())}getIcon(e){return e=="ENGLISH"?"US":e=="SPANISH"?"ES":""}handleRedirect(e,t){this.auxUtilService.redirectToNewTab(e,t)}claimCallsAddEdit(e){let t={icon:"mat_outline:edit_note",title:e?"EDIT EVENT":"ADD EVENT",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:dt,dynamicComponentData:e?{billingevents:e}:null,submitFunction:"saveClaimCalls",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:t}).afterClosed().pipe(r(this)).subscribe(i=>{this.refresh.next(i)})}openCreate(){this.claimCallsAddEdit()}openContactNote(e,t){this.store.dispatch(f.LoadContactNotes({patientId:t,refId:e}));let i={icon:"mat_outline:chat",iconColor:"primary",title:"CONTACT NOTES",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:L,dynamicComponentData:{patientId:t,refId:e,moduleName:"BillingEvents"},submitFunction:"saveContactNote",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:i}).afterClosed().pipe(r(this)).subscribe(o=>{o?.success&&this.store.dispatch(f.LoadContactNotes({patientId:this.patientId,refId:e}))})}static{this.\u0275fac=function(t){return new(t||Se)(n(x),n(O),n(M),n(s),n(N),n(B),n(F))}}static{this.\u0275cmp=E({type:Se,selectors:[["app-claim-calls"]],features:[T([s])],decls:4,vars:9,consts:[[1,"flex","flex-auto","flex-col","overflow-hidden"],[1,"relative","overflow-auto","bg-white","shadow"],[3,"cellClicked","gridOptions","columnDefs","rowData","component","visibleColumns","loading","agGridHeight"]],template:function(t,i){t&1&&(D(0,"div",0)(1,"div",1)(2,"aux-ag-grid",2),P(3,"async"),S("cellClicked",function(l){return i.onSelectionChanged(l)}),I()()()),t&2&&(g(2),v("gridOptions",i.options)("columnDefs",i.columnDefs)("rowData",i.rowData)("component","claimCalls")("visibleColumns",i.visibleColumns)("loading",w(3,7,i.loading$))("agGridHeight","calc(100vh - 304px)"))},dependencies:[W,_],encapsulation:2,changeDetection:0})}};se=y([A()],se);var de=class Ae{constructor(e,t,i,o,l,h,j){this.store=e,this.route=t,this.router=i,this.dateFormatePipe=o,this.searchService=l,this.auxUtilService=h,this.dialog=j,this.rowData=[],this.options={defaultColDef:{flex:1,filter:!0,sortable:!0}},this.columnDefs=[{headerName:"ID",field:"id",filter:"agMultiColumnFilter",minWidth:60},{headerName:"Patient ID",field:"patientId",filter:"agMultiColumnFilter",minWidth:100,cellRenderer:u,cellRendererParams:{field:"patientId"},onCellClicked:a=>this.handleRedirect("financialassistance",{data:{patientid:a.data.patientId}})},{headerName:"TODAY'S DATE",field:"todaysDate",valueFormatter:a=>this.dateFormatePipe.transform(a.data.todaysDate),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"CLAIM DATE OF SERVICE",field:"claimDateOfService",valueFormatter:a=>this.dateFormatePipe.transform(a.data.claimDateOfService),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"OWNEER",field:"owner",filter:"agMultiColumnFilter",minWidth:150},{headerName:"PROGRAM TYPE",field:"programType",filter:"agMultiColumnFilter",minWidth:160},{headerName:"OUTCOME",field:"outcome",filter:"agMultiColumnFilter",minWidth:140},{headerName:"RE-EVALUATION DATE",field:"reEvaluationDate",valueFormatter:a=>this.dateFormatePipe.transform(a.data.reEvaluationDate),filter:"agDateColumnFilter",filterParams:m,minWidth:180}],this.visibleColumns=["id","patientId","todaysDate","owner","programType","outcome","reEvaluationDate"],this.data$=this.route.paramMap.pipe(C(a=>this.store.select(c.selectBillingEvents))),this.loading$=this.store.select(c.selectLoading),this.refresh=new b,this.refresh$=this.refresh.asObservable()}ngOnInit(){this.refresh$.pipe(R(null),r(this)).subscribe(()=>{this.store.dispatch(d.LoadBillingEvents({filter:"financialassistance"}))}),this.data$.pipe(r(this)).subscribe(e=>{this.rowData=e})}onSelectionChanged(e){["comments","patientId"].includes(e.column.getColId())||this.financialAddEdit(e.data)}ngOnDestroy(){this.store.dispatch(d.resetState())}getIcon(e){return e=="ENGLISH"?"US":e=="SPANISH"?"ES":""}handleRedirect(e,t){this.auxUtilService.redirectToNewTab(e,t)}financialAddEdit(e){let t={icon:"mat_outline:edit_note",title:e?"EDIT EVENT":"ADD EVENT",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:mt,dynamicComponentData:e?{billingevents:e}:null,submitFunction:"saveFinancial",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:t}).afterClosed().pipe(r(this)).subscribe(i=>{this.refresh.next(i)})}openCreate(){this.financialAddEdit()}static{this.\u0275fac=function(t){return new(t||Ae)(n(x),n(O),n(M),n(s),n(N),n(B),n(F))}}static{this.\u0275cmp=E({type:Ae,selectors:[["app-financial-assistance-program"]],features:[T([s])],decls:4,vars:9,consts:[[1,"flex","flex-auto","flex-col","overflow-hidden"],[1,"relative","overflow-auto","bg-white","shadow"],[3,"cellClicked","gridOptions","columnDefs","rowData","component","visibleColumns","loading","agGridHeight"]],template:function(t,i){t&1&&(D(0,"div",0)(1,"div",1)(2,"aux-ag-grid",2),P(3,"async"),S("cellClicked",function(l){return i.onSelectionChanged(l)}),I()()()),t&2&&(g(2),v("gridOptions",i.options)("columnDefs",i.columnDefs)("rowData",i.rowData)("component","financialAssistanceProgram")("visibleColumns",i.visibleColumns)("loading",w(3,7,i.loading$))("agGridHeight","calc(100vh - 304px)"))},dependencies:[W,_],encapsulation:2,changeDetection:0})}};de=y([A()],de);var me=class xe{constructor(e,t,i,o,l,h,j){this.store=e,this.route=t,this.router=i,this.dateFormatePipe=o,this.searchService=l,this.auxUtilService=h,this.dialog=j,this.rowData=[],this.options={defaultColDef:{flex:1,filter:!0,sortable:!0}},this.columnDefs=[{headerName:"ID",field:"id",filter:"agMultiColumnFilter",minWidth:60},{headerName:"Patient ID",field:"patientId",filter:"agMultiColumnFilter",minWidth:100,cellRenderer:u,cellRendererParams:{field:"patientId"},onCellClicked:a=>this.handleRedirect("insurancepaid",{data:{patientid:a.data.patientId}})},{headerName:"TODAY'S DATE",field:"todaysDate",valueFormatter:a=>this.dateFormatePipe.transform(a.data.todaysDate),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"CLAIM DATE OF SERVICE",field:"claimDateOfService",valueFormatter:a=>this.dateFormatePipe.transform(a.data.claimDateOfService),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"OWNER",field:"owner",filter:"agMultiColumnFilter",minWidth:110},{headerName:"INSURANCE ID",field:"insuranceId",filter:"agMultiColumnFilter",minWidth:150},{headerName:"PRIMARY OR SECONDARY",field:"primaryOrSecondary",filter:"agMultiColumnFilter",minWidth:160},{headerName:"AMOUNT PAID TO PATIENT",field:"amountPaidToPatient",filter:"agNumberColumnFilter",minWidth:165},{headerName:"FOLLOW UP TYPE",field:"followUpType",filter:"agMultiColumnFilter",minWidth:150},{headerName:"DATE PAYMENT RECEIVED",field:"datePaymentReceived",valueFormatter:a=>this.dateFormatePipe.transform(a.data.datePaymentReceived),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"",field:"comments",filter:"agMultiColumnFilter",cellRenderer:u,cellRendererParams:{field:"contactNotes"},minWidth:100,onCellClicked:a=>this.openContactNote(a.data.id,a.data.patientId)}],this.visibleColumns=["id","patientId","todaysDate","claimDateOfService","owner","primaryOrSecondary","insuranceId","amountPaidToPatient","followUpType","datePaymentReceived","comments"],this.data$=this.route.paramMap.pipe(C(a=>this.store.select(c.selectBillingEvents))),this.loading$=this.store.select(c.selectLoading),this.refresh=new b,this.refresh$=this.refresh.asObservable()}ngOnInit(){this.refresh$.pipe(R(null),r(this)).subscribe(()=>{this.store.dispatch(d.LoadBillingEvents({filter:"insurancepaid"}))}),this.data$.pipe(r(this)).subscribe(e=>{this.rowData=e})}onSelectionChanged(e){["comments","patientId"].includes(e.column.getColId())||this.insurancePaidPatientAddEdit(e.data)}ngOnDestroy(){this.store.dispatch(d.resetState())}getIcon(e){return e=="ENGLISH"?"US":e=="SPANISH"?"ES":""}handleRedirect(e,t){this.auxUtilService.redirectToNewTab(e,t)}insurancePaidPatientAddEdit(e){let t={icon:"mat_outline:edit_note",title:e?"EDIT EVENT":"ADD EVENT",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:rt,dynamicComponentData:e?{billingevents:e}:null,submitFunction:"saveInsurancePaidPatient",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:t}).afterClosed().pipe(r(this)).subscribe(i=>{this.refresh.next(i)})}openCreate(){this.insurancePaidPatientAddEdit()}openContactNote(e,t){this.store.dispatch(f.LoadContactNotes({patientId:t,refId:e}));let i={icon:"mat_outline:chat",iconColor:"primary",title:"CONTACT NOTES",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:L,dynamicComponentData:{patientId:t,refId:e,moduleName:"BillingEvents"},submitFunction:"saveContactNote",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:i}).afterClosed().pipe(r(this)).subscribe(o=>{o?.success&&this.store.dispatch(f.LoadContactNotes({patientId:this.patientId,refId:e}))})}static{this.\u0275fac=function(t){return new(t||xe)(n(x),n(O),n(M),n(s),n(N),n(B),n(F))}}static{this.\u0275cmp=E({type:xe,selectors:[["app-insurance-paid-patient"]],features:[T([s])],decls:4,vars:9,consts:[[1,"flex","flex-auto","flex-col","overflow-hidden"],[1,"relative","overflow-auto","bg-white","shadow"],[3,"cellClicked","gridOptions","columnDefs","rowData","component","visibleColumns","loading","agGridHeight"]],template:function(t,i){t&1&&(D(0,"div",0)(1,"div",1)(2,"aux-ag-grid",2),P(3,"async"),S("cellClicked",function(l){return i.onSelectionChanged(l)}),I()()()),t&2&&(g(2),v("gridOptions",i.options)("columnDefs",i.columnDefs)("rowData",i.rowData)("component","insurancePaidPatient")("visibleColumns",i.visibleColumns)("loading",w(3,7,i.loading$))("agGridHeight","calc(100vh - 304px)"))},dependencies:[W,_],encapsulation:2,changeDetection:0})}};me=y([A()],me);var ce=class Ne{constructor(e,t,i,o,l,h,j){this.store=e,this.route=t,this.router=i,this.dateFormatePipe=o,this.searchService=l,this.auxUtilService=h,this.dialog=j,this.rowData=[],this.options={defaultColDef:{flex:1,filter:!0,sortable:!0}},this.columnDefs=[{headerName:"ID",field:"id",filter:"agMultiColumnFilter",minWidth:60},{headerName:"Patient ID",field:"patientId",filter:"agMultiColumnFilter",minWidth:100,cellRenderer:u,cellRendererParams:{field:"patientId"},onCellClicked:a=>this.handleRedirect("insurancerefunds",{data:{patientid:a.data.patientId}})},{headerName:"TODAY'S DATE",field:"todaysDate",valueFormatter:a=>this.dateFormatePipe.transform(a.data.todaysDate),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"CLAIM DATE OF SERVICE",field:"claimDateOfService",valueFormatter:a=>this.dateFormatePipe.transform(a.data.claimDateOfService),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"OWNER",field:"owner",filter:"agMultiColumnFilter",minWidth:110},{headerName:"INS ID BEING REFUNDED",field:"insuranceId",filter:"agMultiColumnFilter",minWidth:150},{headerName:"PRIMARY OR SECONDARY",field:"primaryOrSecondary",filter:"agMultiColumnFilter",minWidth:160},{headerName:"ADDITIONAL INFO",field:"additionalInfo",filter:"agMultiColumnFilter",minWidth:150},{headerName:"AMOUNT BEING REFUNDED",field:"amount",filter:"agNumberColumnFilter",minWidth:165},{headerName:"REASON FOR REFUND",field:"reasonCode",filter:"agMultiColumnFilter",minWidth:150},{headerName:"",field:"comments",filter:"agMultiColumnFilter",cellRenderer:u,cellRendererParams:{field:"contactNotes"},minWidth:100,onCellClicked:a=>this.openContactNote(a.data.id,a.data.patientId)}],this.visibleColumns=["id","patientId","todaysDate","claimDateOfService","owner","insuranceId","primaryOrSecondary","additionalInfo","amount","reasonCode","comments"],this.data$=this.route.paramMap.pipe(C(a=>this.store.select(c.selectBillingEvents))),this.loading$=this.store.select(c.selectLoading),this.refresh=new b,this.refresh$=this.refresh.asObservable()}ngOnInit(){this.refresh$.pipe(R(null),r(this)).subscribe(()=>{this.store.dispatch(d.LoadBillingEvents({filter:"insurancerefunds"}))}),this.data$.pipe(r(this)).subscribe(e=>{this.rowData=e})}onSelectionChanged(e){["comments","patientId"].includes(e.column.getColId())||this.insuranceRefundsAddEdit(e.data)}ngOnDestroy(){this.store.dispatch(d.resetState())}getIcon(e){return e=="ENGLISH"?"US":e=="SPANISH"?"ES":""}handleRedirect(e,t){this.auxUtilService.redirectToNewTab(e,t)}insuranceRefundsAddEdit(e){let t={icon:"mat_outline:edit_note",title:e?"EDIT EVENT":"ADD EVENT",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:ct,dynamicComponentData:e?{billingevents:e}:null,submitFunction:"saveInsuranceRefunds",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:t}).afterClosed().pipe(r(this)).subscribe(i=>{this.refresh.next(i)})}openCreate(){this.insuranceRefundsAddEdit()}openContactNote(e,t){this.store.dispatch(f.LoadContactNotes({patientId:t,refId:e}));let i={icon:"mat_outline:chat",iconColor:"primary",title:"CONTACT NOTES",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:L,dynamicComponentData:{patientId:t,refId:e,moduleName:"BillingEvents"},submitFunction:"saveContactNote",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:i}).afterClosed().pipe(r(this)).subscribe(o=>{o?.success&&this.store.dispatch(f.LoadContactNotes({patientId:this.patientId,refId:e}))})}static{this.\u0275fac=function(t){return new(t||Ne)(n(x),n(O),n(M),n(s),n(N),n(B),n(F))}}static{this.\u0275cmp=E({type:Ne,selectors:[["app-insurance-refunds"]],features:[T([s])],decls:4,vars:9,consts:[[1,"flex","flex-auto","flex-col","overflow-hidden"],[1,"relative","overflow-auto","bg-white","shadow"],[3,"cellClicked","gridOptions","columnDefs","rowData","component","visibleColumns","loading","agGridHeight"]],template:function(t,i){t&1&&(D(0,"div",0)(1,"div",1)(2,"aux-ag-grid",2),P(3,"async"),S("cellClicked",function(l){return i.onSelectionChanged(l)}),I()()()),t&2&&(g(2),v("gridOptions",i.options)("columnDefs",i.columnDefs)("rowData",i.rowData)("component","insuranceRefunds")("visibleColumns",i.visibleColumns)("loading",w(3,7,i.loading$))("agGridHeight","calc(100vh - 304px)"))},dependencies:[W,_],encapsulation:2,changeDetection:0})}};ce=y([A()],ce);var pe=class Fe{constructor(e,t,i,o,l,h,j){this.store=e,this.router=t,this.route=i,this.dateFormatePipe=o,this.searchService=l,this.auxUtilService=h,this.dialog=j,this.rowData=[],this.options={defaultColDef:{flex:1,filter:!0,sortable:!0}},this.columnDefs=[{headerName:"ID",field:"id",filter:"agMultiColumnFilter",minWidth:60},{headerName:"Patient ID",field:"patientId",filter:"agMultiColumnFilter",minWidth:100,cellRenderer:u,cellRendererParams:{field:"patientId"},onCellClicked:a=>this.handleRedirect("openarreport",{data:{patientid:a.data.patientId}})},{headerName:"TODAY'S DATE",field:"todaysDate",valueFormatter:a=>this.dateFormatePipe.transform(a.data.todaysDate),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"CLAIM DATE OF SERVICE",field:"claimDateOfService",valueFormatter:a=>this.dateFormatePipe.transform(a.data.claimDateOfService),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"OWNER",field:"owner",filter:"agMultiColumnFilter",minWidth:110},{headerName:"PRIMARY OR SECONDARY",field:"primaryOrSecondary",filter:"agMultiColumnFilter",minWidth:160},{headerName:"INS ID",field:"insuranceId",filter:"agMultiColumnFilter",minWidth:160},{headerName:"OUTCOME",field:"outcome",filter:"agMultiColumnFilter",minWidth:180},{headerName:"",field:"comments",filter:"agMultiColumnFilter",cellRenderer:u,cellRendererParams:{field:"contactNotes"},minWidth:75,onCellClicked:a=>this.openContactNote(a.data.id,a.data.patientId)}],this.visibleColumns=["id","patientId","todaysDate","claimDateOfService","owner","primaryOrSecondary","insuranceId","outcome","comments"],this.data$=this.route.paramMap.pipe(C(a=>this.store.select(c.selectBillingEvents))),this.loading$=this.store.select(c.selectLoading),this.refresh=new b,this.refresh$=this.refresh.asObservable()}ngOnInit(){this.refresh$.pipe(R(null),r(this)).subscribe(()=>{this.store.dispatch(d.LoadBillingEvents({filter:"openarreport"}))}),this.data$.pipe(r(this)).subscribe(e=>{this.rowData=e})}onSelectionChanged(e){["comments","patientId"].includes(e.column.getColId())||this.openARReportAddEdit(e.data)}ngOnDestroy(){this.store.dispatch(d.resetState())}getIcon(e){return e=="ENGLISH"?"US":e=="SPANISH"?"ES":""}handleRedirect(e,t){this.auxUtilService.redirectToNewTab(e,t)}openARReportAddEdit(e){let t={icon:"mat_outline:edit_note",title:e?"EDIT EVENT":"ADD EVENT",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:pt,dynamicComponentData:e?{billingevents:e}:null,submitFunction:"saveOpenARReport",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:t}).afterClosed().pipe(r(this)).subscribe(i=>{this.refresh.next(i)})}openCreate(){this.openARReportAddEdit()}openContactNote(e,t){this.store.dispatch(f.LoadContactNotes({patientId:t,refId:e}));let i={icon:"mat_outline:chat",iconColor:"primary",title:"CONTACT NOTES",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:L,dynamicComponentData:{patientId:t,refId:e,moduleName:"BillingEvents"},submitFunction:"saveContactNote",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:i}).afterClosed().pipe(r(this)).subscribe(o=>{o?.success&&this.store.dispatch(f.LoadContactNotes({patientId:this.patientId,refId:e}))})}static{this.\u0275fac=function(t){return new(t||Fe)(n(x),n(M),n(O),n(s),n(N),n(B),n(F))}}static{this.\u0275cmp=E({type:Fe,selectors:[["app-open-ar-report"]],features:[T([s])],decls:4,vars:9,consts:[[1,"flex","flex-auto","flex-col","overflow-hidden"],[1,"relative","overflow-auto","bg-white","shadow"],[3,"cellClicked","gridOptions","columnDefs","rowData","component","visibleColumns","loading","agGridHeight"]],template:function(t,i){t&1&&(D(0,"div",0)(1,"div",1)(2,"aux-ag-grid",2),P(3,"async"),S("cellClicked",function(l){return i.onSelectionChanged(l)}),I()()()),t&2&&(g(2),v("gridOptions",i.options)("columnDefs",i.columnDefs)("rowData",i.rowData)("component","openArReport")("visibleColumns",i.visibleColumns)("loading",w(3,7,i.loading$))("agGridHeight","calc(100vh - 304px)"))},dependencies:[W,_],encapsulation:2,changeDetection:0})}};pe=y([A()],pe);var ue=class be{constructor(e,t,i,o,l,h,j){this.store=e,this.route=t,this.router=i,this.dateFormatePipe=o,this.searchService=l,this.auxUtilService=h,this.dialog=j,this.rowData=[],this.options={defaultColDef:{flex:1,filter:!0,sortable:!0}},this.columnDefs=[{headerName:"ID",field:"id",filter:"agMultiColumnFilter",minWidth:60},{headerName:"Patient ID",field:"patientId",filter:"agMultiColumnFilter",minWidth:100,cellRenderer:u,cellRendererParams:{field:"patientId"},onCellClicked:a=>this.handleRedirect("patientcalls",{data:{patientid:a.data.patientId}})},{headerName:"TODAY'S DATE",field:"todaysDate",valueFormatter:a=>this.dateFormatePipe.transform(a.data.todaysDate),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"CLAIM DATE OF SERVICE",field:"claimDateOfService",valueFormatter:a=>this.dateFormatePipe.transform(a.data.claimDateOfService),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"USERNAME",field:"owner",filter:"agMultiColumnFilter",minWidth:150},{headerName:"",field:"comments",filter:"agMultiColumnFilter",cellRenderer:u,cellRendererParams:{field:"contactNotes"},minWidth:75,onCellClicked:a=>this.openContactNote(a.data.id,a.data.patientId)}],this.visibleColumns=["id","patientId","todaysDate","claimDateOfService","owner","comments"],this.data$=this.route.paramMap.pipe(C(a=>this.store.select(c.selectBillingEvents))),this.loading$=this.store.select(c.selectLoading),this.refresh=new b,this.refresh$=this.refresh.asObservable()}ngOnInit(){this.refresh$.pipe(R(null),r(this)).subscribe(()=>{this.store.dispatch(d.LoadBillingEvents({filter:"patientcalls"}))}),this.data$.pipe(r(this)).subscribe(e=>{this.rowData=e})}onSelectionChanged(e){["comments","patientId"].includes(e.column.getColId())||this.patientCallsAddEdit(e.data)}ngOnDestroy(){this.store.dispatch(d.resetState())}getIcon(e){return e=="ENGLISH"?"US":e=="SPANISH"?"ES":""}handleRedirect(e,t){this.auxUtilService.redirectToNewTab(e,t)}patientCallsAddEdit(e){let t={icon:"mat_outline:edit_note",title:e?"EDIT EVENT":"ADD EVENT",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:st,dynamicComponentData:e?{billingevents:e}:null,submitFunction:"saveCalls",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:t}).afterClosed().pipe(r(this)).subscribe(i=>{this.refresh.next(i)})}openCreate(){this.patientCallsAddEdit()}openContactNote(e,t){this.store.dispatch(f.LoadContactNotes({patientId:t,refId:e}));let i={icon:"mat_outline:chat",iconColor:"primary",title:"CONTACT NOTES",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:L,dynamicComponentData:{patientId:t,refId:e,moduleName:"BillingEvents"},submitFunction:"saveContactNote",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:i}).afterClosed().pipe(r(this)).subscribe(o=>{o?.success&&this.store.dispatch(f.LoadContactNotes({patientId:this.patientId,refId:e}))})}static{this.\u0275fac=function(t){return new(t||be)(n(x),n(O),n(M),n(s),n(N),n(B),n(F))}}static{this.\u0275cmp=E({type:be,selectors:[["app-patient-calls"]],features:[T([s])],decls:4,vars:9,consts:[[1,"flex","flex-auto","flex-col","overflow-hidden"],[1,"relative","overflow-auto","bg-white","shadow"],[3,"cellClicked","gridOptions","columnDefs","rowData","component","visibleColumns","loading","agGridHeight"]],template:function(t,i){t&1&&(D(0,"div",0)(1,"div",1)(2,"aux-ag-grid",2),P(3,"async"),S("cellClicked",function(l){return i.onSelectionChanged(l)}),I()()()),t&2&&(g(2),v("gridOptions",i.options)("columnDefs",i.columnDefs)("rowData",i.rowData)("component","patientCalls")("visibleColumns",i.visibleColumns)("loading",w(3,7,i.loading$))("agGridHeight","calc(100vh - 304px)"))},dependencies:[W,_],encapsulation:2,changeDetection:0})}};ue=y([A()],ue);var he=class Re{constructor(e,t,i,o,l,h,j){this.store=e,this.route=t,this.router=i,this.dateFormatePipe=o,this.searchService=l,this.auxUtilService=h,this.dialog=j,this.rowData=[],this.options={defaultColDef:{flex:1,filter:!0,sortable:!0}},this.columnDefs=[{headerName:"ID",field:"id",filter:"agMultiColumnFilter",minWidth:60},{headerName:"Patient ID",field:"patientId",filter:"agMultiColumnFilter",minWidth:100,cellRenderer:u,cellRendererParams:{field:"patientId"},onCellClicked:a=>this.handleRedirect("patientrefunds",{data:{patientid:a.data.patientId}})},{headerName:"TODAY'S DATE",field:"todaysDate",valueFormatter:a=>this.dateFormatePipe.transform(a.data.todaysDate),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"CLAIM DATE OF SERVICE",field:"claimDateOfService",valueFormatter:a=>this.dateFormatePipe.transform(a.data.claimDateOfService),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"OWNER",field:"owner",filter:"agMultiColumnFilter",minWidth:110},{headerName:"ADDITIONAL INFO",field:"additionalInfo",filter:"agMultiColumnFilter",minWidth:150},{headerName:"AMOUNT BEING REFUNDED",field:"amount",filter:"agNumberColumnFilter",minWidth:165},{headerName:"REASON FOR REFUND",field:"reasonCode",filter:"agMultiColumnFilter",minWidth:150},{headerName:"",field:"comments",filter:"agMultiColumnFilter",cellRenderer:u,cellRendererParams:{field:"contactNotes"},minWidth:100,onCellClicked:a=>this.openContactNote(a.data.id,a.data.patientId)}],this.visibleColumns=["id","patientId","todaysDate","claimDateOfService","owner","additionalInfo","amount","reasonCode","comments"],this.data$=this.route.paramMap.pipe(C(a=>this.store.select(c.selectBillingEvents))),this.loading$=this.store.select(c.selectLoading),this.refresh=new b,this.refresh$=this.refresh.asObservable()}ngOnInit(){this.refresh$.pipe(R(null),r(this)).subscribe(()=>{this.store.dispatch(d.LoadBillingEvents({filter:"patientrefunds"}))}),this.data$.pipe(r(this)).subscribe(e=>{this.rowData=e})}onSelectionChanged(e){["comments","patientId"].includes(e.column.getColId())||this.patientRefundsAddEdit(e.data)}ngOnDestroy(){this.store.dispatch(d.resetState())}getIcon(e){return e=="ENGLISH"?"US":e=="SPANISH"?"ES":""}handleRedirect(e,t){this.auxUtilService.redirectToNewTab(e,t)}patientRefundsAddEdit(e){let t={icon:"mat_outline:edit_note",title:e?"EDIT EVENT":"ADD EVENT",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:ht,dynamicComponentData:e?{billingevents:e}:null,submitFunction:"savePatientRefunds",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:t}).afterClosed().pipe(r(this)).subscribe(i=>{this.refresh.next(i)})}openCreate(){this.patientRefundsAddEdit()}openContactNote(e,t){this.store.dispatch(f.LoadContactNotes({patientId:t,refId:e}));let i={icon:"mat_outline:chat",iconColor:"primary",title:"CONTACT NOTES",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:L,dynamicComponentData:{patientId:t,refId:e,moduleName:"BillingEvents"},submitFunction:"saveContactNote",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:i}).afterClosed().pipe(r(this)).subscribe(o=>{o?.success&&this.store.dispatch(f.LoadContactNotes({patientId:this.patientId,refId:e}))})}static{this.\u0275fac=function(t){return new(t||Re)(n(x),n(O),n(M),n(s),n(N),n(B),n(F))}}static{this.\u0275cmp=E({type:Re,selectors:[["app-patient-refunds"]],features:[T([s])],decls:4,vars:9,consts:[[1,"flex","flex-auto","flex-col","overflow-hidden"],[1,"relative","overflow-auto","bg-white","shadow"],[3,"cellClicked","gridOptions","columnDefs","rowData","component","visibleColumns","loading","agGridHeight"]],template:function(t,i){t&1&&(D(0,"div",0)(1,"div",1)(2,"aux-ag-grid",2),P(3,"async"),S("cellClicked",function(l){return i.onSelectionChanged(l)}),I()()()),t&2&&(g(2),v("gridOptions",i.options)("columnDefs",i.columnDefs)("rowData",i.rowData)("component","patientRefunds")("visibleColumns",i.visibleColumns)("loading",w(3,7,i.loading$))("agGridHeight","calc(100vh - 304px)"))},dependencies:[W,_],encapsulation:2,changeDetection:0})}};he=y([A()],he);var fe=class Te{constructor(e,t,i,o,l,h,j){this.store=e,this.router=t,this.route=i,this.dateFormatePipe=o,this.searchService=l,this.auxUtilService=h,this.dialog=j,this.rowData=[],this.options={defaultColDef:{flex:1,filter:!0,sortable:!0}},this.columnDefs=[{headerName:"ID",field:"id",filter:"agMultiColumnFilter",minWidth:60},{headerName:"Patient ID",field:"patientId",filter:"agMultiColumnFilter",minWidth:100,cellRenderer:u,cellRendererParams:{field:"patientId"},onCellClicked:a=>this.handleRedirect("primary",{data:{patientid:a.data.patientId}})},{headerName:"TODAY'S DATE",field:"todaysDate",valueFormatter:a=>this.dateFormatePipe.transform(a.data.todaysDate),filter:"agDateColumnFilter",filterParams:m,minWidth:110},{headerName:"CLAIM DATE OF SERVICE",field:"claimDateOfService",valueFormatter:a=>this.dateFormatePipe.transform(a.data.claimDateOfService),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"Owner",field:"owner",filter:"agMultiColumnFilter",minWidth:110},{headerName:"INS ID",field:"primaryInsId",filter:"agMultiColumnFilter",minWidth:100},{headerName:"ACTION",field:"action",filter:"agMultiColumnFilter",minWidth:140},{headerName:"IS RESULT OF REFUND?",field:"isRefundResult",filter:"agMultiColumnFilter",filterValueGetter:a=>a.data.isRefundResult?"True":"False",valueFormatter:a=>a.value?"YES":"NO",cellDataType:"text",minWidth:160},{headerName:"REASON FOR DENIAL/REJECTION",field:"reasonCode",filter:"agMultiColumnFilter",minWidth:225},{headerName:"",field:"comments",filter:"agMultiColumnFilter",cellRenderer:u,cellRendererParams:{field:"contactNotes"},onCellClicked:a=>this.openContactNote(a.data.id,a.data.patientId),minWidth:75}],this.visibleColumns=["id","patientId","todaysDate","claimDateOfService","owner","primaryInsId","action","isRefundResult","reasonCode","comments"],this.data$=this.route.paramMap.pipe(C(a=>this.store.select(c.selectBillingEvents))),this.loading$=this.store.select(c.selectLoading),this.refresh=new b,this.refresh$=this.refresh.asObservable()}ngOnInit(){this.refresh$.pipe(R(null),r(this)).subscribe(()=>{this.store.dispatch(d.LoadBillingEvents({filter:"primary"}))}),this.data$.pipe(r(this)).subscribe(e=>{this.rowData=e})}onSelectionChanged(e){["comments","patientId"].includes(e.column.getColId())||this.primaryAddEdit(e.data)}ngOnDestroy(){this.store.dispatch(d.resetState())}getIcon(e){return e=="ENGLISH"?"US":e=="SPANISH"?"ES":""}handleRedirect(e,t){this.auxUtilService.redirectToNewTab(e,t)}primaryAddEdit(e){let t={icon:"mat_outline:edit_note",title:e?"EDIT EVENT":"ADD EVENT",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:ut,dynamicComponentData:e?{billingevents:e}:null,submitFunction:"savePrimary",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:t}).afterClosed().pipe(r(this)).subscribe(i=>{this.refresh.next(i)})}openCreate(){this.primaryAddEdit()}openContactNote(e,t){this.store.dispatch(f.LoadContactNotes({patientId:t,refId:e}));let i={icon:"mat_outline:chat",iconColor:"primary",title:"CONTACT NOTES",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:L,dynamicComponentData:{patientId:t,refId:e,moduleName:"BillingEvents"},submitFunction:"saveContactNote",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:i}).afterClosed().pipe(r(this)).subscribe(o=>{o?.success&&this.store.dispatch(f.LoadContactNotes({patientId:this.patientId,refId:e}))})}static{this.\u0275fac=function(t){return new(t||Te)(n(x),n(M),n(O),n(s),n(N),n(B),n(F))}}static{this.\u0275cmp=E({type:Te,selectors:[["app-primary-appeal-denials-rejections"]],features:[T([s])],decls:4,vars:9,consts:[[1,"flex","flex-auto","flex-col","overflow-hidden"],[1,"relative","overflow-auto","bg-white","shadow"],[3,"cellClicked","gridOptions","columnDefs","rowData","component","visibleColumns","loading","agGridHeight"]],template:function(t,i){t&1&&(D(0,"div",0)(1,"div",1)(2,"aux-ag-grid",2),P(3,"async"),S("cellClicked",function(l){return i.onSelectionChanged(l)}),I()()()),t&2&&(g(2),v("gridOptions",i.options)("columnDefs",i.columnDefs)("rowData",i.rowData)("component","primaryAppealDenialsRejections")("visibleColumns",i.visibleColumns)("loading",w(3,7,i.loading$))("agGridHeight","calc(100vh - 304px)"))},dependencies:[W,_],encapsulation:2,changeDetection:0})}};fe=y([A()],fe);var Ce=class Pe{constructor(e,t,i,o,l,h,j){this.store=e,this.router=t,this.route=i,this.dateFormatePipe=o,this.searchService=l,this.auxUtilService=h,this.dialog=j,this.rowData=[],this.options={defaultColDef:{flex:1,filter:!0,sortable:!0}},this.columnDefs=[{headerName:"ID",field:"id",filter:"agMultiColumnFilter",minWidth:60},{headerName:"Patient ID",field:"patientId",filter:"agMultiColumnFilter",minWidth:100,cellRenderer:u,cellRendererParams:{field:"patientId"},onCellClicked:a=>this.handleRedirect("returns",{data:{patientid:a.data.patientId}})},{headerName:"TODAY'S DATE",field:"todaysDate",valueFormatter:a=>this.dateFormatePipe.transform(a.data.todaysDate),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"CLAIM DATE OF SERVICE",field:"claimDateOfService",valueFormatter:a=>this.dateFormatePipe.transform(a.data.claimDateOfService),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"OWNER",field:"owner",filter:"agMultiColumnFilter",minWidth:150},{headerName:"INSURANCE ID",field:"insuranceId",filter:"agMultiColumnFilter",minWidth:160},{headerName:"RETURN ACTION",field:"returnAction",filter:"agMultiColumnFilter",minWidth:225},{headerName:"DATE FULLY RESOLVED",field:"dateFullyResolved",valueFormatter:a=>this.dateFormatePipe.transform(a.data.dateFullyResolved),filter:"agDateColumnFilter",filterParams:m,minWidth:180},{headerName:"",field:"comments",filter:"agMultiColumnFilter",cellRenderer:u,cellRendererParams:{field:"contactNotes"},minWidth:75,onCellClicked:a=>this.openContactNote(a.data.id,a.data.patientId)}],this.visibleColumns=["id","patientId","todaysDate","claimDateOfService","owner","insuranceId","returnAction","dateFullyResolved","comments"],this.data$=this.route.paramMap.pipe(C(a=>this.store.select(c.selectBillingEvents))),this.loading$=this.store.select(c.selectLoading),this.refresh=new b,this.refresh$=this.refresh.asObservable()}ngOnInit(){this.refresh$.pipe(R(null),r(this)).subscribe(()=>{this.store.dispatch(d.LoadBillingEvents({filter:"returns"}))}),this.data$.pipe(r(this)).subscribe(e=>{this.rowData=e})}onSelectionChanged(e){["comments","patientId"].includes(e.column.getColId())||this.returnsAddEdit(e.data)}ngOnDestroy(){this.store.dispatch(d.resetState())}getIcon(e){return e=="ENGLISH"?"US":e=="SPANISH"?"ES":""}handleRedirect(e,t){this.auxUtilService.redirectToNewTab(e,t)}returnsAddEdit(e){let t={icon:"mat_outline:edit_note",title:e?"EDIT EVENT":"ADD EVENT",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:ft,dynamicComponentData:e?{billingevents:e}:null,submitFunction:"saveReturns",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:t}).afterClosed().pipe(r(this)).subscribe(i=>{this.refresh.next(i)})}openCreate(){this.returnsAddEdit()}openContactNote(e,t){this.store.dispatch(f.LoadContactNotes({patientId:t,refId:e}));let i={icon:"mat_outline:chat",iconColor:"primary",title:"CONTACT NOTES",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:L,dynamicComponentData:{patientId:t,refId:e,moduleName:"BillingEvents"},submitFunction:"saveContactNote",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:i}).afterClosed().pipe(r(this)).subscribe(o=>{o?.success&&this.store.dispatch(f.LoadContactNotes({patientId:this.patientId,refId:e}))})}static{this.\u0275fac=function(t){return new(t||Pe)(n(x),n(M),n(O),n(s),n(N),n(B),n(F))}}static{this.\u0275cmp=E({type:Pe,selectors:[["app-returns"]],features:[T([s])],decls:4,vars:9,consts:[[1,"flex","flex-auto","flex-col","overflow-hidden"],[1,"relative","overflow-auto","bg-white","shadow"],[3,"cellClicked","gridOptions","columnDefs","rowData","component","visibleColumns","loading","agGridHeight"]],template:function(t,i){t&1&&(D(0,"div",0)(1,"div",1)(2,"aux-ag-grid",2),P(3,"async"),S("cellClicked",function(l){return i.onSelectionChanged(l)}),I()()()),t&2&&(g(2),v("gridOptions",i.options)("columnDefs",i.columnDefs)("rowData",i.rowData)("component","returns")("visibleColumns",i.visibleColumns)("loading",w(3,7,i.loading$))("agGridHeight","calc(100vh - 304px)"))},dependencies:[W,_],encapsulation:2,changeDetection:0})}};Ce=y([A()],Ce);var ge=class we{constructor(e,t,i,o,l,h,j){this.store=e,this.router=t,this.route=i,this.dateFormatePipe=o,this.searchService=l,this.auxUtilService=h,this.dialog=j,this.rowData=[],this.options={defaultColDef:{flex:1,filter:!0,sortable:!0}},this.columnDefs=[{headerName:"ID",field:"id",filter:"agMultiColumnFilter",minWidth:60},{headerName:"Patient ID",field:"patientId",filter:"agMultiColumnFilter",minWidth:100,cellRenderer:u,cellRendererParams:{field:"patientId"},onCellClicked:a=>this.handleRedirect("secondary",{data:{patientid:a.data.patientId}})},{headerName:"TODAY'S DATE",field:"todaysDate",valueFormatter:a=>this.dateFormatePipe.transform(a.data.todaysDate),filter:"agDateColumnFilter",filterParams:m,minWidth:110},{headerName:"CLAIM DATE OF SERVICE",field:"claimDateOfService",valueFormatter:a=>this.dateFormatePipe.transform(a.data.claimDateOfService),filter:"agDateColumnFilter",filterParams:m,minWidth:150},{headerName:"Owner",field:"owner",filter:"agMultiColumnFilter",minWidth:110},{headerName:"INS ID",field:"secondaryTertiaryInsId",filter:"agMultiColumnFilter",minWidth:100},{headerName:"ACTION THAT WAS TOOK",field:"action",filter:"agMultiColumnFilter",minWidth:170},{headerName:"IS THIS A RESULT OF A REFUND?",field:"isRefundResult",filter:"agMultiColumnFilter",filterValueGetter:a=>a.data.isRefundResult?"YES":"NO",valueFormatter:a=>a.value?"YES":"NO",cellDataType:"text",minWidth:200},{headerName:"REASON FOR DENIAL/REJECTION",field:"reasonCode",filter:"agMultiColumnFilter",minWidth:200},{headerName:"",field:"comments",filter:"agMultiColumnFilter",cellRenderer:u,cellRendererParams:{field:"contactNotes"},minWidth:75,onCellClicked:a=>this.openContactNote(a.data.id,a.data.patientId)}],this.visibleColumns=["id","patientId","todaysDate","claimDateOfService","owner","secondaryTertiaryInsId","action","isRefundResult","reasonCode","comments"],this.data$=this.route.paramMap.pipe(C(a=>this.store.select(c.selectBillingEvents))),this.loading$=this.store.select(c.selectLoading),this.refresh=new b,this.refresh$=this.refresh.asObservable()}ngOnInit(){this.refresh$.pipe(R(null),r(this)).subscribe(()=>{this.store.dispatch(d.LoadBillingEvents({filter:"secondary"}))}),this.data$.pipe(r(this)).subscribe(e=>{this.rowData=e})}onSelectionChanged(e){["comments","patientId"].includes(e.column.getColId())||this.secondaryAddEdit(e.data)}ngOnDestroy(){this.store.dispatch(d.resetState())}getIcon(e){return e=="ENGLISH"?"US":e=="SPANISH"?"ES":""}handleRedirect(e,t){this.auxUtilService.redirectToNewTab(e,t)}secondaryAddEdit(e){let t={icon:"mat_outline:edit_note",title:e?"EDIT EVENT":"ADD EVENT",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:Ct,dynamicComponentData:e?{billingevents:e}:null,submitFunction:"saveSecondary",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:t}).afterClosed().pipe(r(this)).subscribe(i=>{this.refresh.next(i)})}openCreate(){this.secondaryAddEdit()}openContactNote(e,t){this.store.dispatch(f.LoadContactNotes({patientId:t,refId:e}));let i={icon:"mat_outline:chat",iconColor:"primary",title:"CONTACT NOTES",titleColor:"text-secondary",cancelButtonText:"Cancel",saveButtonText:"Save",dynamicComponent:L,dynamicComponentData:{patientId:t,refId:e,moduleName:"BillingEvents"},submitFunction:"saveContactNote",enterKeyEnabled:!0};this.dialog.open(p,{width:"800px",maxWidth:"100%",panelClass:["animate__animated","animate__slideInRight","animated","custom-container"],position:{top:"0px",right:"0px"},height:"100vh",data:i}).afterClosed().pipe(r(this)).subscribe(o=>{o?.success&&this.store.dispatch(f.LoadContactNotes({patientId:this.patientId,refId:e}))})}static{this.\u0275fac=function(t){return new(t||we)(n(x),n(M),n(O),n(s),n(N),n(B),n(F))}}static{this.\u0275cmp=E({type:we,selectors:[["app-secondary-tertiary-appeals-denials-rejections"]],features:[T([s])],decls:4,vars:9,consts:[[1,"flex","flex-auto","flex-col","overflow-hidden"],[1,"relative","overflow-auto","bg-white","shadow"],[3,"cellClicked","gridOptions","columnDefs","rowData","component","visibleColumns","loading","agGridHeight"]],template:function(t,i){t&1&&(D(0,"div",0)(1,"div",1)(2,"aux-ag-grid",2),P(3,"async"),S("cellClicked",function(l){return i.onSelectionChanged(l)}),I()()()),t&2&&(g(2),v("gridOptions",i.options)("columnDefs",i.columnDefs)("rowData",i.rowData)("component","secondaryTertiaryAppealsDenialsRejections")("visibleColumns",i.visibleColumns)("loading",w(3,7,i.loading$))("agGridHeight","calc(100vh - 304px)"))},dependencies:[W,_],encapsulation:2,changeDetection:0})}};ge=y([A()],ge);var ve=class _e{constructor(e,t,i,o){this._fuseMediaWatcherService=e,this.auxSearchService=t,this.breakpointObserver=i,this.dialog=o,this.toggleMenu=!1,this.drawerMode="side",this.drawerOpened=!0,this.menuData=[{title:"Actions",type:"group",children:[{title:"Clear Filter",type:"basic",icon:"heroicons_outline:trash",function:()=>{this.clearFilter()},classes:{wrapper:"padding-style"}}]},{title:"Filters",type:"group",children:[{title:"ALL",type:"basic",icon:"mat_outline:all_inclusive",link:"./all",classes:{wrapper:"padding-style",icon:k.orange.text+" aux-icon-size"}},{title:"Primary",type:"basic",icon:"heroicons_outline:tag",link:"./primary",classes:{wrapper:"padding-style",icon:k.orange.text+" aux-icon-size"}},{title:"Secondary",type:"basic",icon:"heroicons_outline:tag",link:"./secondary",classes:{wrapper:"padding-style",icon:k.orange.text+" aux-icon-size"}},{title:"Insurance Refunds",type:"basic",icon:"heroicons_outline:tag",link:"./insurancerefunds",classes:{wrapper:"padding-style",icon:k.orange.text+" aux-icon-size"}},{title:"Patient Refunds",type:"basic",icon:"heroicons_outline:tag",link:"./patientrefunds",classes:{wrapper:"padding-style",icon:k.orange.text+" aux-icon-size"}},{title:"Insurance Paid",type:"basic",icon:"heroicons_outline:tag",link:"./insurancepaid",classes:{wrapper:"padding-style",icon:k.orange.text+" aux-icon-size"}},{title:"Returns",type:"basic",icon:"heroicons_outline:tag",link:"./returns",classes:{wrapper:"padding-style",icon:k.orange.text+" aux-icon-size"}},{title:"Patient Calls",type:"basic",icon:"heroicons_outline:tag",link:"./patientcalls",classes:{wrapper:"padding-style",icon:k.orange.text+" aux-icon-size"}},{title:"Claim Calls",type:"basic",icon:"heroicons_outline:tag",link:"./claimcalls",classes:{wrapper:"padding-style",icon:k.orange.text+" aux-icon-size"}},{title:"Appeals",type:"basic",icon:"heroicons_outline:tag",link:"./appeals",classes:{wrapper:"padding-style",icon:k.orange.text+" aux-icon-size"}},{title:"Open AR Report",type:"basic",icon:"heroicons_outline:tag",link:"./openarreport",classes:{wrapper:"padding-style",icon:k.orange.text+" aux-icon-size"}},{title:"Financial Assistance",type:"basic",icon:"heroicons_outline:tag",link:"./financialassistance",classes:{wrapper:"padding-style",icon:k.orange.text+" aux-icon-size"}}]}],this.searchCtrl=new ze,this.isHandset$=this.breakpointObserver.observe([De.Tablet,De.Handset]).pipe(J(l=>l.matches),Oe())}ngOnInit(){this.searchCtrl.valueChanges.pipe(r(this)).subscribe(e=>this.auxSearchService.search.next(e)),this._fuseMediaWatcherService.onMediaChange$.pipe(r(this)).subscribe(({matchingAliases:e})=>{e.includes("lg")?(this.drawerMode="side",this.drawerOpened=!0):(this.drawerMode="over",this.drawerOpened=!1)})}ngOnDestroy(){this.auxSearchService.search.next(null)}clearFilter(){this.auxSearchService.resetFilter.next({resetGrid:!0})}static{this.\u0275fac=function(t){return new(t||_e)(n(Xe),n(N),n(He),n(F))}}static{this.\u0275cmp=E({type:_e,selectors:[["app-billing-events-center"]],decls:22,vars:9,consts:[["matDrawer",""],[1,"absolute","inset-0","flex","min-w-0","flex-col","overflow-hidden"],[1,"bg-card","flex","flex-0","flex-col","border-b","p-6","dark:bg-transparent","sm:flex-row","sm:items-center","sm:justify-between","sm:px-10","sm:py-6"],[1,"min-w-0","flex-1"],[1,"truncate","text-3xl","font-extrabold","leading-7","tracking-tight","sm:leading-10","md:text-4xl"],[1,"min-w-0"],[1,"mt-2"],[1,"flex","flex-none","items-center","bg-white","px-4","dark:bg-transparent"],[1,"bg-base","flex","w-full","flex-1","items-center","rounded-full","border","px-5","py-4"],[1,"mr-2","icon-size-5",3,"svgIcon"],["placeholder","Search Results...","type","text",1,"placeholder-black","w-full","bg-transparent","outline-none",3,"formControl"],[1,"mt-6","flex","shrink-0","items-center","sm:ml-4","sm:mt-0"],["mat-icon-button","",3,"click"],[3,"svgIcon"],[1,"h-full","flex-auto"],[1,"w-72","dark:bg-gray-900",3,"autoFocus","mode","opened"],[3,"menuData","showTitle","title"],[1,"flex","flex-col"],[1,"flex-auto"]],template:function(t,i){if(t&1){let o=We();D(0,"div",1)(1,"div",2)(2,"div",3)(3,"div")(4,"h2",4),Le(5," BillingEventsCenter "),I()()(),D(6,"div",5)(7,"div",6)(8,"div",7)(9,"div",8),ie(10,"mat-icon",9)(11,"input",10),I()()()(),D(12,"div",11)(13,"button",12),S("click",function(){Me(o);let h=je(17);return Be(h.toggle())}),ie(14,"mat-icon",13),I()()(),D(15,"mat-drawer-container",14)(16,"mat-drawer",15,0),ie(18,"aux-sidebar",16),I(),D(19,"mat-drawer-content",17)(20,"div",18),ie(21,"router-outlet"),I()()()()}t&2&&(g(10),v("svgIcon","mat_outline:search"),g(),v("formControl",i.searchCtrl),g(3),v("svgIcon","heroicons_outline:menu"),g(2),v("autoFocus",!1)("mode",i.drawerMode)("opened",i.drawerOpened),g(2),v("menuData",i.menuData)("showTitle",!1)("title","Charge Actions"))},dependencies:[Ue,$e,ke,Ve,qe,Ye,Ke,Je,Qe,it,tt,at,et],encapsulation:2})}};ve=y([A()],ve);var _o=[{path:"",component:ve,providers:Dt,children:[{path:"",redirectTo:"all",pathMatch:"full"},{path:"all",component:re},{path:"primary",component:fe},{path:"secondary",component:ge},{path:"insurancerefunds",component:ce},{path:"patientrefunds",component:he},{path:"insurancepaid",component:me},{path:"returns",component:Ce},{path:"patientcalls",component:ue},{path:"claimcalls",component:se},{path:"appeals",component:le},{path:"openarreport",component:pe},{path:"financialassistance",component:de}]}];export{_o as default};
