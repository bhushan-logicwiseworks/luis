import{a as i,b as e}from"./chunk-HTMKYO5H.js";import{c as E}from"./chunk-4RIDPFY2.js";import{b as v}from"./chunk-PRXHNPXO.js";import{a as m}from"./chunk-V2BYYYUY.js";import{a as C}from"./chunk-Z76PEBTC.js";import{a as o,b as y,c as s}from"./chunk-W6W3L4PS.js";import{n as R}from"./chunk-7TJE7DO7.js";import{a as g}from"./chunk-UUGBUDN2.js";import{d as $}from"./chunk-W5GYUEPJ.js";import{J as l,ha as p,la as O,p as c,qa as W,v as a,wa as f}from"./chunk-3Q5CJMKA.js";var D={PAYOR_CENTER:{PayorOverride:"/centers/payor-center/payor-override"},WORK_ORDER_CENTER:{BatchEligibility:"/centers/work-order-center/batch-eligibility"}};var _=(()=>{class u{constructor(k,n,S,h,d){this.actions$=k,this.apiService=n,this.auxUtilService=S,this.router=h,this.store=d,this.loadWorkOrderById$=o(()=>this.actions$.pipe(s(i.LoadWorkOrderDetails),p(t=>this.apiService.getWorkOrderDetails(t.id).pipe(a(r=>this.auxUtilService.transformWorkOrderDates(r,v)),a(r=>i.LoadWorkOrderDetailsSuccess({workrep:r})),l(r=>c(i.LoadWorkOrderDetailsFailure({error:r.error}))))))),this.loadPatientSalesRep$=o(()=>this.actions$.pipe(s(i.LoadworkSalesRep),p(t=>this.apiService.getPatientSalesRep().pipe(a(r=>i.LoadworkSalesRepSuccess({salesrep:r})),l(r=>c(i.LoadworkSalesRepFailure({error:r.error}))))))),this.loadBillType$=o(()=>this.actions$.pipe(s(i.BillTypeDropdown),p(t=>this.apiService.getARBillTypeDropdown().pipe(a(r=>i.BillTypeDropdownSuccess({billType:r})),l(r=>c(i.BillTypeDropdownFailure({error:r.error}))))))),this.getItemCode$=o(()=>this.actions$.pipe(s(i.getItemCode),p(t=>this.apiService.getItemCode(t.id).pipe(a(r=>i.getItemCodeSuccess({itemcode:r})),l(r=>c(i.getItemCodeFailure({error:r.error}))))))),this.addWorkRep$=o(()=>this.actions$.pipe(s(i.AddworkOrder),p(t=>this.apiService.saveWorkOrder(t.workorder).pipe(a(r=>(m.ADD_SUCCESS(),i.AddworkOrderSuccess({workorder:r}))),l(r=>c(i.AddworkOrderFailure({error:r.error}))))))),this.loadPayorDetailsForWorkOrder$=o(()=>this.actions$.pipe(s(i.LoadPayorDetails),p(({id:t})=>this.apiService.getPayorDetailsForWorkOrder(t).pipe(a(r=>i.LoadPayorDetailsSuccess({payorsDetail:r})),l(r=>c(i.LoadPayorDetailsFailure({error:r.error}))))))),this.redirectWorkOrder$=o(()=>this.actions$.pipe(s(i.AddworkOrderSuccess),a(t=>i.Navigate({commands:[window.history.back()]})))),this.getReferCode$=o(()=>this.actions$.pipe(s(i.getReferCode),p(t=>this.apiService.getReferCode(t.id).pipe(a(r=>i.getReferCodeSuccess({referCode:r})),l(r=>c(i.getReferCodeFailure({error:r}))))))),this.LoadBranches$=o(()=>this.actions$.pipe(s(i.LoadBranchDropDown),p(t=>this.apiService.getBranchList().pipe(a(r=>i.LoadBranchDropDownSuccess({branch:r})),l(r=>c(i.LoadBranchDropDownFailure({error:r.error}))))))),this.getBatchEligibility$=o(()=>this.actions$.pipe(s(i.FilterBatchEligibilityRecords),p(t=>(this.router.navigate([D.WORK_ORDER_CENTER.BatchEligibility],{queryParams:{startDate:t.startDate.toISOString(),endDate:t.endDate.toISOString()}}),[i.GetBatchEligibility({startDate:t.startDate,endDate:t.endDate})])))),this.filterBatchEligibilityRecords$=o(()=>this.actions$.pipe(s(i.GetBatchEligibility),p(t=>this.apiService.getBatchEligibility({startDate:t.startDate,endDate:t.endDate}).pipe(O(()=>{this.router.navigate([D.WORK_ORDER_CENTER.BatchEligibility],{queryParams:{startDate:t.startDate.toISOString(),endDate:t.endDate.toISOString()}})}),a(r=>i.GetBatchEligibilitySuccess({eligibility:r})),l(r=>c(i.GetBatchEligibilityFailure({error:r.error}))))))),this.processBatchEligibility$=o(()=>this.actions$.pipe(s(i.ProcessBatchEligibility),p(t=>this.apiService.processBatchEligibility(t.patientIds).pipe(a(r=>(m.CUSTOM_SUCCESS("processBatchEligibilitySuccess"),i.ProcessBatchEligibilitySuccess({eligibility:r}))),l(r=>(m.CUSTOM_FAILURE("processBatchEligibilityError"),c(i.ProcessBatchEligibilityFailure({error:r.error})))))))),this.processBatchEligibilitySuccessEffect$=o(()=>this.actions$.pipe(s(i.ProcessBatchEligibilitySuccess),p(()=>[e.LoadWorkReps({filter:"epo"}),e.LoadWorkReps({filter:"eposent"}),e.LoadWorkReps({filter:"mblines"}),e.LoadWorkReps({filter:"pblines"}),e.LoadWorkReps({filter:"pylines"}),e.LoadWorkReps({filter:"pypast"}),e.LoadWorkReps({filter:"monthlymarker"}),e.LoadWorkReps({filter:"datevariants"}),e.LoadWorkReps({filter:"authexpiring"})]),l(t=>c(e.LoadWorkReps({filter:"epo"}),e.LoadWorkReps({filter:"eposent"}),e.LoadWorkReps({filter:"mblines"}),e.LoadWorkReps({filter:"pblines"}),e.LoadWorkReps({filter:"pylines"}),e.LoadWorkReps({filter:"pypast"}),e.LoadWorkReps({filter:"monthlymarker"}),e.LoadWorkReps({filter:"datevariants"}),e.LoadWorkReps({filter:"authexpiring"})))))}static{this.\u0275fac=function(n){return new(n||u)(f(y),f(g),f(C),f($),f(R))}}static{this.\u0275prov=W({token:u,factory:u.\u0275fac,providedIn:"root"})}}return u})();var Q=(()=>{class u{constructor(k,n,S){this.actions$=k,this.store=n,this.apiService=S,this.loadWorksReps$=o(()=>this.actions$.pipe(s(e.LoadWorkReps),p(h=>this.apiService.getWorkOrders(h.filter).pipe(a(d=>e.LoadWorkRepsSuccess({workreps:d})),l(d=>c(e.LoadWorkRepsFailure({error:d.error}))))))),this.deleteWork$=o(()=>this.actions$.pipe(s(e.DeleteWorkRep),p(h=>this.apiService.deleteWorOrder(h.dto).pipe(a(d=>e.DeleteWorkRepSuccess()),l(d=>c(e.DeleteWorkRepFailure({error:d.error}))))))),this.deleteMultipleWork$=o(()=>this.actions$.pipe(s(e.DeleteMultipleWorkRep),p(h=>this.apiService.deleteMultipleWorOrder(h.ids).pipe(a(d=>e.DeleteMultipleWorkRepSuccess()),l(d=>c(e.DeleteMultipleWorkRepFailure({error:d.error}))))))),this.searchWorkOrderEpoSent$=o(()=>this.actions$.pipe(s(e.SearchWorkOrderEpoSent),p(({criteria:h})=>{let d=this.buildFilter("eposent",h);return this.apiService.getWorkOrders(d).pipe(a(t=>e.SearchWorkOrderEpoSentSuccess({workreps:t})),l(t=>c(e.SearchWorkOrderEpoSentFailure({error:t.error}))))}))),this.searchWorkOrderMonthlyMarker$=o(()=>this.actions$.pipe(s(e.SearchWorkOrderMonthlyMarker),p(({criteria:h})=>{let d=this.buildFilter("monthlymarker",h);return this.apiService.getWorkOrders(d).pipe(a(t=>e.SearchWorkOrderMonthlyMarkerSuccess({workreps:t})),l(t=>c(e.SearchWorkOrderMonthlyMarkerFailure({error:t.error}))))}))),this.wogroupEdit$=o(()=>this.actions$.pipe(s(e.WOGroupEdit),p(h=>this.apiService.wogroupEdit(h.patientData).pipe(a(d=>(m.EDIT_SUCCESS(),e.WOGroupEditSuccess())),l(d=>c(e.WOGroupEditFailure({error:d.error}))))))),this.refresh$=o(()=>this.actions$.pipe(s(i.AddworkOrderSuccess,e.DeleteWorkRepSuccess,e.WOGroupEditSuccess,E.EditGroupWorkEditSuccess,E.SaveSelectedProcessShortcutSuccess,e.DeleteMultipleWorkRepSuccess),a(()=>e.Refresh())))}buildFilter(k,n){let S=[];return n.nextBill&&S.push(`nextBill=${encodeURIComponent(n.nextBill)}`),n.itemCode&&S.push(`itemCode=${encodeURIComponent(n.itemCode)}`),n.description&&S.push(`description=${encodeURIComponent(n.description)}`),n.state&&S.push(`state=${encodeURIComponent(n.state)}`),n.payor&&S.push(`payor=${encodeURIComponent(n.payor)}`),S.length?`${k}?${S.join("&")}`:k}static{this.\u0275fac=function(n){return new(n||u)(f(y),f(R),f(g))}}static{this.\u0275prov=W({token:u,factory:u.\u0275fac,providedIn:"root"})}}return u})();export{_ as a,Q as b};
