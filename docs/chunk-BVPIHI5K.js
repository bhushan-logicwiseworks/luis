import{E as ge,a as s,b as o,d as k,q as C}from"./chunk-4RIDPFY2.js";import{a as ue}from"./chunk-PL5OXHAL.js";import{b as fe}from"./chunk-PAS4GHRS.js";import{a as Pe,b as Se,c as De}from"./chunk-6HRBECBJ.js";import{c as ie}from"./chunk-E6UI7ODH.js";import{a as w}from"./chunk-V2BYYYUY.js";import{a as de}from"./chunk-ODTVUJKH.js";import{a as he}from"./chunk-Z76PEBTC.js";import{c as le,d as me}from"./chunk-SIF5SKDU.js";import{a as u,b as I,c as P}from"./chunk-W6W3L4PS.js";import{n as F}from"./chunk-7TJE7DO7.js";import{a as Ce}from"./chunk-2SL7SW2K.js";import{c as ce}from"./chunk-6WEMRU4N.js";import{a as ae,b as re,d as oe,g as ne,h as se}from"./chunk-BV6IOHNV.js";import{B as ee,D as te,c as Z,h as K,i as Q,o as W,r as X,t as Y}from"./chunk-4JDFQORI.js";import{a as pe}from"./chunk-TWDZ6JFE.js";import{a as b}from"./chunk-UUGBUDN2.js";import{d as J}from"./chunk-W5GYUEPJ.js";import{$b as y,Ab as j,B as $,Bc as B,Dc as z,Gb as R,Ia as N,J as d,Ja as x,N as _,Ob as h,Vb as V,Zb as f,_b as r,dc as U,fc as A,gc as O,ha as l,hd as H,p as c,pb as m,qa as L,rc as G,sc as D,tb as E,uc as q,v as p,wa as g}from"./chunk-3Q5CJMKA.js";import{g as ve}from"./chunk-2AVGQ2MQ.js";var we=(()=>{class i{loadInTakeAndSalesPerson(){return this.store.select(ge.selectPatientCenterDetailsState).pipe(_(1),l(e=>(e.intake.length||this.store.dispatch(C.LoadIntakeDropDown()),e.patientStatus.length||this.store.dispatch(C.LoadPatientStatusDropDown()),e.patientReferral.length||this.store.dispatch(C.LoadPatientReferralDropDown()),e.inactiveReason.length||this.store.dispatch(C.LoadInactiveReasonDropDown()),e.patientCategory.length||this.store.dispatch(C.LoadPatientCategoryDropDown()),e.salesrep.length||this.store.dispatch(C.LoadPatientSalesRep()),e.contactMethod.length||this.store.dispatch(C.LoadPatientContactMethodDropDown()),e.placeOfService.length||this.store.dispatch(C.LoadPlaceOfServiceDropDown()),c(!0))))}constructor(e){this.store=e}canActivate(){return this.loadInTakeAndSalesPerson().pipe(l(()=>c(!0)),d(e=>(console.log("Error",e),c(!1))))}static{this.\u0275fac=function(n){return new(n||i)(g(F))}}static{this.\u0275prov=L({token:i,factory:i.\u0275fac})}}return i})();var je=(()=>{class i{constructor(e,n,S){this.actions$=e,this.store=n,this.apiService=S,this.loadDiagnosiscodes$=u(()=>this.actions$.pipe(P(s.LoadPatientDiagnosiscode),l(a=>this.apiService.getPatientDiagnosiscode(a.id).pipe(p(t=>s.LoadPatientDiagnosiscodeSuccess({diagnosiscodes:t})),d(t=>c(s.LoadPatientDiagnosiscodeFailure({error:t.error}))))))),this.loadDiagnosiscodesList$=u(()=>this.actions$.pipe(P(s.LoadPatientDiagnosisCodesList),l(a=>this.apiService.getPatientDiagnosiscodeList().pipe(p(t=>s.LoadPatientDiagnosisCodesListSuccess({diagnosisCodesList:t})),d(t=>c(s.LoadPatientDiagnosisCodesListFailure({error:t.error}))))))),this.addPatientDiagnosiscodes$=u(()=>this.actions$.pipe(P(s.AddPatientDiagnosiscode),l(a=>this.apiService.addNewPatientDiagnosiscodes(a.diagnosiscode).pipe(p(t=>s.AddPatientDiagnosiscodeSuccess({diagnosiscode:t})),d(t=>c(s.AddPatientDiagnosiscodeFailure({error:t.error}))))))),this.deleteDiagnosiscodes$=u(()=>this.actions$.pipe(P(s.DeletePatientDiagnosiscode),l(a=>this.apiService.deletePatientDiagnosiscode(a.dto).pipe(p(t=>s.DeletePatientDiagnosiscodeSuccess()),d(t=>c(s.DeletePatientDiagnosiscodeFailure({error:t.error}))))))),this.refresh$=u(()=>this.actions$.pipe(P(s.DeletePatientDiagnosiscodeSuccess,s.AddPatientDiagnosiscodeSuccess),p(()=>s.Refresh())))}static{this.\u0275fac=function(n){return new(n||i)(g(I),g(F),g(b))}}static{this.\u0275prov=L({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();var Be=(()=>{class i{constructor(e,n,S){this.actions$=e,this.store=n,this.apiService=S,this.loadPhysicians$=u(()=>this.actions$.pipe(P(o.LoadPatientPhysicians),l(a=>this.apiService.getPatientPhysicians(a.id).pipe(p(t=>o.LoadPatientPhysiciansSuccess({physicians:t})),d(t=>c(o.LoadPatientPhysiciansFailure({error:t.error}))))))),this.addPatientPhysician$=u(()=>this.actions$.pipe(P(o.AddPatientPhysicians),l(a=>this.apiService.addNewPatientPhysicians(a.physicians).pipe(p(t=>o.AddPatientPhysiciansSuccess({physicians:t})),d(t=>c(o.AddPatientPhysiciansFailure({error:t.error}))))))),this.deletePhysician$=u(()=>this.actions$.pipe(P(o.DeletePatientPhysicians),l(a=>this.apiService.deletePatientPhysicians(a.dto).pipe(p(t=>o.DeletePatientPhysiciansSuccess()),d(t=>c(o.DeletePatientPhysiciansFailure({error:t.error}))))))),this.loadPhysiciansList$=u(()=>this.actions$.pipe(P(o.LoadPatientPhysiciansList),l(a=>this.apiService.getPatientPhysiciansList().pipe(p(t=>o.LoadPatientPhysiciansListSuccess({physiciansList:t})),d(t=>c(o.LoadPatientPhysiciansListFailure({error:t.error}))))))),this.updatePhysiciansList$=u(()=>this.actions$.pipe(P(o.UpdatePatientPhysicians),l(({physicians:a})=>{let t=a.map(v=>this.apiService.addNewPatientPhysicians(v));return $(t).pipe(p(v=>(w.EDIT_SUCCESS(),o.UpdatePatientPhysiciansSuccess({physicians:v}))),d(v=>(w.EDIT_FAILURE(),c(o.UpdatePatientPhysiciansFailure({error:v.error})))))}))),this.refresh$=u(()=>this.actions$.pipe(P(o.DeletePatientPhysiciansSuccess,o.AddPatientPhysiciansSuccess,o.UpdatePatientPhysiciansSuccess),p(()=>o.Refresh())))}static{this.\u0275fac=function(n){return new(n||i)(g(I),g(F),g(b))}}static{this.\u0275prov=L({token:i,factory:i.\u0275fac,providedIn:"root"})}}return i})();var ye=ve(Ce());var Le=i=>({"mb-12":i});function Ie(i,be){if(i&1&&(f(0,"mat-error"),D(1),r()),i&2){let e=O();m(),q("Please enter valid date!! It should be ",e.dateFormat," .")}}var ct=(()=>{class i{constructor(e,n,S,a,t,v){this.data=e,this.matDialogRef=n,this._formBuilder=S,this.auxUtilService=a,this.route=t,this.store=v,this.isShortcut=!1,this.dateFormat=de.DATE_FORMAT,this.isShortcut=e.dynamicComponentData!==null?e.dynamicComponentData.search:!1}ngOnInit(){this.searchForm=this._formBuilder.group({id:[],firstName:[""],lastName:[""],dob:[],city:[""],zip:[""],phone:[""],cell:[""],email:[""]})}searchPatient(){if(!this.searchForm.invalid)if(this.auxUtilService.objFilled(this.searchForm.value)){let e=this.searchForm.value;e=this.auxUtilService.transFormValues(e,ue),this.searchForm.get("dob").value&&(e=this.auxUtilService.formatDateFields(e,["dob"])),this.isShortcut&&(this.route.navigate(["centers/patient-center/none"],{queryParams:{search:"patient_search"},queryParamsHandling:"merge"}),this.store.dispatch(k.isShortCut({shortCut:this.isShortcut}))),this.store.dispatch(k.PatientSearch({patientSearch:e})),this.matDialogRef.close()}else{ye.default.fire({icon:"error",title:"Oops...",text:"Enter search criteria"});return}}closeDocument(){this.matDialogRef.close(),this.route.navigate([],{queryParams:{search:null},queryParamsHandling:"merge"})}onDateChange(e,n){this.searchForm=this.auxUtilService.manuallyCheckDateValid(e.target.value,this.searchForm,n)}static{this.\u0275fac=function(n){return new(n||i)(E(me,8),E(le),E(ee),E(he),E(J),E(F))}}static{this.\u0275cmp=j({type:i,selectors:[["app-patient-search-form"]],features:[B([{provide:ne,useValue:{appearance:"outline"}},ie()])],decls:41,vars:27,consts:[["datepicker","matDatepicker"],[1,"flex","max-h-[400px]","flex-auto","flex-col","overflow-y-scroll","p-3","xl:max-h-none","xl:overflow-y-visible",3,"ngSubmit","formGroup"],[1,"w-full"],["matInput","",1,"uppercase",3,"formControlName","placeholder","spellcheck"],[1,"w-full",3,"ngClass"],["matInput","","defaultDate","",3,"change","formControlName","matDatepicker","placeholder"],["matIconSuffix","",3,"for"],["matInput","",1,"uppercase",3,"formControlName"],["matInput","","mask","(000) 000-0000",3,"formControlName","showMaskTyped"],["matInput","",3,"formControlName"]],template:function(n,S){if(n&1){let a=U();f(0,"form",1),A("ngSubmit",function(){return N(a),x(S.searchPatient())}),f(1,"mat-form-field",2)(2,"mat-label"),D(3,"Patient #"),r(),y(4,"input",3),r(),f(5,"mat-form-field",2)(6,"mat-label"),D(7,"First Name"),r(),y(8,"input",3),r(),f(9,"mat-form-field",2)(10,"mat-label"),D(11,"Last Name"),r(),y(12,"input",3),r(),f(13,"mat-form-field",4)(14,"mat-label"),D(15,"Date of Birth"),r(),f(16,"input",5),A("change",function(v){return N(a),x(S.onDateChange(v,"dob"))}),r(),y(17,"mat-datepicker-toggle",6)(18,"mat-datepicker",null,0),R(20,Ie,2,1,"mat-error"),r(),f(21,"mat-form-field",2)(22,"mat-label"),D(23,"City"),r(),y(24,"input",3),r(),f(25,"mat-form-field",2)(26,"mat-label"),D(27,"Zip"),r(),y(28,"input",7),r(),f(29,"mat-form-field",2)(30,"mat-label"),D(31,"Phone"),r(),y(32,"input",8),r(),f(33,"mat-form-field",2)(34,"mat-label"),D(35,"Cell"),r(),y(36,"input",8),r(),f(37,"mat-form-field",2)(38,"mat-label"),D(39,"Email"),r(),y(40,"input",9),r()()}if(n&2){let a=G(19);h("formGroup",S.searchForm),m(4),h("formControlName","id")("placeholder","Patient id")("spellcheck",!1),m(4),h("formControlName","firstName")("placeholder","First Name")("spellcheck",!1),m(4),h("formControlName","lastName")("placeholder","Last Name")("spellcheck",!1),m(),h("ngClass",z(25,Le,S.searchForm.get("dob").hasError("notValidDate"))),m(3),h("formControlName","dob")("matDatepicker",a)("placeholder",S.dateFormat),m(),h("for",a),m(3),V(S.searchForm.get("dob").hasError("notValidDate")?20:-1),m(4),h("formControlName","city")("placeholder","City")("spellcheck",!1),m(4),h("formControlName","zip"),m(4),h("formControlName","phone")("showMaskTyped",!0),m(4),h("formControlName","cell")("showMaskTyped",!0),m(4),h("formControlName","email")}},dependencies:[te,W,Z,K,Q,X,Y,se,ae,ce,H,Se,De,oe,Pe,re,fe],encapsulation:2,data:{animation:pe}})}}return i})();export{je as a,Be as b,ct as c,we as d};
